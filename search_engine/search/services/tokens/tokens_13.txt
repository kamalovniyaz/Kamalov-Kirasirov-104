Функции
Язык
программирования
Предисловие
Введение
чего
начать
Установка
Привет
Мир
Программирование
игры
загадки
Общие
концепции
Переменные
изменяемость
Типы
Данных
Комментарии
Управляющие
конструкции
Понимание
владения
Что
такое
владение
Ссылки
заимствование
Тип
среза
Использование
структур
объединения
связанных
Определение
создание
экземпляров
Пример
программы
использующей
структуры
Синтаксис
метода
Перечисления
сопоставление
образцом
Конструкция
потока
управления
Лаконичный
поток
Управление
растущими
проектами
помощью
пакетов
крейтов
модулей
Пакеты
крейты
областью
действия
конфиденциальностью
Пути
элемент
дереве
путей
область
видимости
ключевого
слова
коллекции
Хранение
списков
значений
векторами
закодированного
текста
строками
ключей
связанными
значениями
Обработка
ошибок
Неустранимые
ошибки
Устранимые
трейты
характеристики
время
жизни
Обобщённые
разделяемого
поведения
Валидация
ссылок
сроков
Написание
автоматических
тестов
писать
тесты
выполнением
Организация
Проект
вводом
выводом
командной
строки
Получение
аргументов
Чтение
файла
Рефакторинг
обеспечения
модульности
улучшения
обработки
Разработка
функциональности
библиотеки
разработки
тестирование
Работа
переменными
среды
Запись
сообщений
ошибках
вместо
Функциональные
возможности
языка
итераторы
замыкания
анонимные
которые
захватывают
своё
окружение
последовательности
элементов
итераторов
Улучшение
нашего
проекта
Сравнение
производительности
циклы
Подробнее
Настройка
билдов
профилей
выпуска
Публикация
крейта
Рабочие
области
бинарных
файлов
Расширение
возможностей
добавления
пользовательских
команд
Умные
указатели
указания
данные
куче
умными
указателями
обычными
ссылками
трейта
Выполнение
кода
очистке
умный
указатель
подсчётом
внутренняя
Ссылочные
могут
привести
утечке
памяти
Безбоязненный
параллелизм
потоков
параллельного
выполнения
Пересылка
передачи
потоками
общим
состоянием
Расширяемый
трейтов
объектно
ориентированного
ориентированных
языков
трейт
объектов
допускающих
значения
разных
типов
Реализация
шаблона
проектирования
Шаблоны
Все
места
где
использоваться
Опровержимость
может
шаблон
соответствовать
Расширенные
Небезопасный
код
Продвинутые
типажи
Макросы
Финальный
многопоточного
веб
сервера
однопоточного
Превращение
многопоточный
сервер
Мягкое
завершение
работы
очистка
Приложения
Ключевые
Операторы
символы
Выводимые
Полезные
инструменты
Редакции
Переводы
книги
создаётся
широко
распространены
коде
Вы
уже
познакомились
одной
самых
важных
функций
языке
функцией
которая
является
точкой
входа
большинства
программ
также
видели
ключевое
слово
позволяющее
объявлять
новые
использует
змеиный
регистр
основной
стиль
имён
переменных
котором
буквы
строчные
символ
подчёркивания
разделяет
Вот
программа
содержащая
определения
Имя
необходимо
указать
которым
следует
набор
круглых
скобок
Фигурные
скобки
указывают
компилятору
начинается
заканчивается
тело
Мы
можем
вызвать
любую
функцию
которую
определили
ранее
введя
её
следом
Поскольку
программе
определена
можно
Обратите
внимание
исходном
могли
определить
раньше
важно
определяете
свои
главное
они
были
определены
той
видеть
вызывающий
их
Создадим
новый
бинарный
названием
дальнейшего
изучения
Поместите
файл
запустите
его
должны
увидеть
следующий
вывод
выполняются
том
порядке
расположены
Сначала
печатается
сообщение
затем
вызывается
печатает
Параметры
имеющие
представляют
собой
специальные
являющиеся
частью
сигнатуры
есть
предоставить
ей
конкретные
этих
параметров
Технически
называются
аргументы
повседневном
общении
люди
обычно
используют
параметр
аргумент
взаимозаменяемые
определении
конкретных
передаваемых
вызове
этой
версии
добавляем
Попробуйте
запустить
эту
программу
получить
результат
Объявление
содержит
один
именем
задан
передаём
макрос
помещает
место
пары
фигурных
содержащих
строке
формата
сигнатурах
обязаны
указывать
каждого
параметра
Это
намеренное
решение
дизайне
требование
аннотаций
определениях
позволяет
дальнейшем
избежать
необходимости
использовать
других
местах
какой
имеете
виду
Компилятор
выдавать
более
сообщения
он
знает
какие
ожидает
функция
нескольких
разделяйте
объявления
запятыми
показано
ниже
Этот
создаёт
двумя
параметрами
Первый
называется
типом
Второй
имеет
текст
содержащий
Попробуем
Замените
текущую
файле
предыдущий
вызвали
качестве
эти
Инструкции
выражения
Тела
состоят
ряда
инструкций
необязательно
заканчивающихся
выражением
сих
пор
рассматривали
включали
завершающее
выражение
часть
языком
основанным
выражениях
важное
различие
понимать
языках
таких
различий
нет
поэтому
давайте
рассмотрим
различия
влияют
выполняют
какое
действие
возвращают
вычисляются
результирующего
несколько
примеров
самом
деле
использовали
переменной
присвоение
оператором
Листинге
инструкция
Листинг
содержащей
одну
инструкцию
являются
инструкцией
Весь
сам
себе
Следовательно
можете
присвоить
другой
пытается
сделать
получите
ошибку
то
ошибка
будет
выглядеть
так
возвращает
значение
чем
связать
переменную
отличается
присваивание
присвоенное
обе
будут
иметь
вычисляют
составляют
большую
остального
который
напишете
математическую
операцию
примеру
вычисляющим
быть
которое
вычисляется
Вызов
макроса
блок
созданный
представляет
например
данном
случае
связывается
строка
точки
запятой
конце
строк
содержат
завершающих
точек
добавите
точку
конец
превратите
тогда
она
возвращать
Помните
этом
когда
будете
изучать
возвращаемые
возвращаемыми
коду
вызывает
называем
объявить
стрелки
возвращаемое
синонимом
конечного
блоке
выйти
вернуть
используя
указав
большинство
неявно
последнее
такой
вызовов
макросов
одно
число
абсолютно
корректной
Заметьте
возвращаемый
данной
определён
таким
возвращаемым
значением
детально
Здесь
два
момента
первых
показывает
возвращаемого
инициализации
эта
эквивалентна
следующей
вторых
одинокую
потому
которого
хотим
Запуск
напечатает
поставить
превратив
получим
Компиляция
данного
следующую
Основное
ошибке
раскрывает
ключевую
проблему
этого
сообщает
возвращено
выражается
единичным
ничего
возвращается
противоречит
определению
приводит
выводе
выдаёт
возможно
поможет
исправить
предлагает
удалить
устранения
