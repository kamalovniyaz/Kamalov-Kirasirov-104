Ссылочные
циклы
могут
привести
утечке
памяти
Язык
программирования
Предисловие
Введение
чего
начать
Установка
Привет
Мир
Программирование
игры
загадки
Общие
концепции
Переменные
изменяемость
Типы
Данных
Функции
Комментарии
Управляющие
конструкции
Понимание
владения
Что
такое
владение
Ссылки
заимствование
Тип
среза
Использование
структур
объединения
связанных
Определение
создание
экземпляров
Пример
программы
использующей
структуры
Синтаксис
метода
Перечисления
сопоставление
образцом
Конструкция
потока
управления
Лаконичный
поток
Управление
растущими
проектами
помощью
пакетов
крейтов
модулей
Пакеты
крейты
областью
действия
конфиденциальностью
Пути
элемент
дереве
путей
область
видимости
ключевого
слова
коллекции
Хранение
списков
значений
векторами
закодированного
текста
строками
ключей
связанными
значениями
Обработка
ошибок
Неустранимые
ошибки
Устранимые
трейты
характеристики
время
жизни
Обобщённые
разделяемого
поведения
Валидация
ссылок
сроков
Написание
автоматических
тестов
писать
тесты
выполнением
Организация
Проект
вводом
выводом
командной
строки
Получение
аргументов
Чтение
файла
Рефакторинг
обеспечения
модульности
улучшения
обработки
Разработка
функциональности
библиотеки
разработки
тестирование
Работа
переменными
среды
Запись
сообщений
ошибках
вместо
Функциональные
возможности
языка
итераторы
замыкания
анонимные
которые
захватывают
своё
окружение
последовательности
элементов
итераторов
Улучшение
нашего
проекта
Сравнение
производительности
Подробнее
Настройка
билдов
профилей
выпуска
Публикация
крейта
Рабочие
области
бинарных
файлов
Расширение
возможностей
добавления
пользовательских
команд
Умные
указатели
указания
данные
куче
умными
указателями
обычными
ссылками
трейта
Выполнение
кода
очистке
умный
указатель
подсчётом
внутренняя
Безбоязненный
параллелизм
потоков
параллельного
выполнения
Пересылка
передачи
потоками
общим
состоянием
Расширяемый
трейтов
объектно
ориентированного
ориентированных
языков
трейт
объектов
допускающих
значения
разных
типов
Реализация
шаблона
проектирования
Шаблоны
Все
места
где
использоваться
Опровержимость
может
шаблон
соответствовать
Расширенные
Небезопасный
код
Продвинутые
типажи
Макросы
Финальный
многопоточного
веб
сервера
однопоточного
Превращение
многопоточный
сервер
Мягкое
завершение
работы
очистка
Приложения
Ключевые
Операторы
символы
Выводимые
Полезные
инструменты
Редакции
Переводы
книги
создаётся
зацикливания
приводить
Гарантии
безопасности
затрудняют
делают
невозможным
случайное
выделение
которое
никогда
очищается
известное
утечка
Полное
предотвращение
утечек
является
одной
гарантий
это
означает
утечки
безопасны
Мы
видим
допускает
утечку
можно
создавать
которых
элементы
ссылаются
друг
друга
цикле
создаёт
потому
счётчик
каждого
элемента
достигнет
будут
удалены
ссылочного
Давайте
посмотрим
произойти
ситуация
её
предотвратить
начиная
определения
листинге
Файл
Листинг
Объявление
который
содержит
могли
изменять
то
ссылается
экземпляр
используем
другую
вариацию
листинга
Второй
варианте
теперь
менять
значение
делали
хотим
указывает
вариант
также
добавляем
метод
нам
было
удобно
обращаться
второму
элементу
нас
есть
функцию
которая
использует
Этот
список
переменной
Затем
он
изменяет
внутри
так
указывал
создавая
ссылочное
зацикливание
коде
инструкции
показать
счётчиков
различных
точках
этого
процесса
цикла
двух
указывающих
создаём
содержащий
начальным
списком
другое
меняем
зацикленность
делаем
получить
ссылку
которую
помещаем
переменную
типа
изменить
внутреннее
содержащего
начальное
взятое
запускаем
оставив
последний
закомментированным
данный
момент
получим
вывод
Количество
экземпляры
равно
того
заменили
конце
уничтожает
уменьшает
Память
занимает
будет
освобождена
неё
удаляет
экземпляра
быть
другой
прежнему
него
Таким
образом
выделенная
списка
наглядно
представить
цикл
создали
диаграмму
рисунке
Рисунок
Ссылочный
вы
удалите
комментарий
запустите
программу
пытаться
печатать
указывающей
далее
пока
переполниться
стек
сравнению
реальной
программой
последствия
создания
этом
примере
страшны
сразу
программа
завершается
Однако
более
сложная
выделит
много
удерживать
течение
длительного
времени
потреблять
больше
ей
нужно
перенапрячь
систему
приведёт
исчерпанию
доступной
Вызвать
образование
ссылочной
зацикленности
невозможно
вас
содержат
аналогичные
вложенные
комбинации
внутренней
изменчивостью
должны
убедиться
создаёте
можете
полагаться
их
обнаружит
являлось
логической
ошибкой
программе
которой
использовать
автоматические
проверку
другие
практики
программного
минимизации
решение
избежания
реорганизация
ваших
некоторые
выражали
отсутствие
результате
иметь
построенные
некоторых
отношениях
основанные
тогда
отношения
влияют
удалить
всегда
варианты
владели
своим
поэтому
невозможна
рассмотрим
использованием
графов
состоящих
родительских
дочерних
узлов
увидеть
являются
подходящим
способом
предотвращения
замена
умного
указателя
До
сих
пор
демонстрировали
вызов
увеличивает
удаляется
его
равен
создать
слабую
вызвав
передав
Сильные
поделиться
владением
Слабые
отражают
связи
подсчёт
влияет
очищен
Они
приведут
ссылочному
циклу
любой
включающий
несколько
слабых
разорван
сильных
задействованных
станет
равным
вызываете
получаете
увеличить
экземпляре
отслеживания
количества
существующих
аналогично
Разница
том
должен
мог
удалён
могло
удалено
необходимо
ещё
существует
сделать
значением
Делайте
вызывая
вернёт
получите
результат
Поскольку
возвращает
обеспечит
обработку
обоих
случаев
некорректного
качестве
примера
чей
знает
следующем
элементе
создадим
дерево
чьи
знают
своих
элементах
древовидной
дочерними
узлами
начала
построим
узлах
структуру
именем
содержать
собственное
дочерние
владел
своими
этим
напрямую
каждому
определяем
внутренние
те
узлы
отношению
другому
узлу
поле
оборачивающий
будем
наше
один
одного
показано
узла
клонируем
содержимое
сохраняем
имеет
владельцев
можем
доступ
обращение
нет
способа
добраться
Причина
связаны
знал
родителем
сделаем
Добавление
ребёнка
родителю
дочерний
узел
своём
родительском
узле
добавить
Проблема
решить
каким
знаем
создаст
ссылочную
тому
равны
Подумаем
этих
родительский
владеть
потомками
удаляем
существовать
случай
использования
использовало
выглядит
сможет
ссылаться
свой
владеет
обновляем
нового
был
способ
слабой
ссылкой
примеру
исключением
поля
изначально
родителя
новый
пустой
этапе
пытаемся
получаем
выводе
первой
новая
ссылка
своего
родительского
потомков
Когда
получили
дать
снова
напечатаем
раз
своему
печатаем
избегаем
конечном
итоге
заканчивался
переполнением
стека
печатаются
бесконечного
вывода
создал
сказать
посмотрев
вызове
Визуализация
изменений
изменяются
новой
перемещая
эту
происходит
выходе
Изменения
показаны
создан
равное
связываем
печати
указывающего
распечатаем
счётчики
увидим
клон
хранящийся
заканчивается
выходит
уменьшается
никакого
никаких
попытаемся
окончания
переменная
единственной
Вся
логика
управляет
счётчиками
сбросом
встроена
реализаций
типажа
Указав
отношение
дочернего
родительскому
должно
определении
делает
возможным
родительские
указывающие
наоборот
Итоги
этой
главе
рассказано
компромиссов
умолчанию
известный
размер
размещённые
отслеживает
изменяемостью
предоставляет
необходимости
неизменного
обеспечивает
соблюдение
правил
заимствования
компиляции
обсудили
обеспечивают
большую
функциональность
умных
указателей
исследовали
вызывать
эта
глава
вызвала
интерес
хотите
реализовать
свои
собственные
обратитесь
полезной
информацией
поговорим
параллелизме
узнаете
нескольких
новых
указателях
