Хранение
ключей
связанными
значениями
Язык
программирования
Предисловие
Введение
чего
начать
Установка
Привет
Мир
Программирование
игры
загадки
Общие
концепции
Переменные
изменяемость
Типы
Данных
Функции
Комментарии
Управляющие
конструкции
Понимание
владения
Что
такое
владение
Ссылки
заимствование
Тип
среза
Использование
структур
объединения
связанных
Определение
создание
экземпляров
Пример
программы
использующей
структуры
Синтаксис
метода
Перечисления
сопоставление
образцом
Конструкция
потока
управления
Лаконичный
поток
Управление
растущими
проектами
помощью
пакетов
крейтов
модулей
Пакеты
крейты
областью
действия
конфиденциальностью
Пути
элемент
дереве
путей
область
видимости
ключевого
слова
коллекции
списков
значений
векторами
закодированного
текста
строками
Обработка
ошибок
Неустранимые
ошибки
Устранимые
трейты
характеристики
время
жизни
Обобщённые
разделяемого
поведения
Валидация
ссылок
сроков
Написание
автоматических
тестов
писать
тесты
выполнением
Организация
Проект
вводом
выводом
командной
строки
Получение
аргументов
Чтение
файла
Рефакторинг
обеспечения
модульности
улучшения
обработки
Разработка
функциональности
библиотеки
разработки
тестирование
Работа
переменными
среды
Запись
сообщений
ошибках
вместо
Функциональные
возможности
языка
итераторы
замыкания
анонимные
которые
захватывают
своё
окружение
последовательности
элементов
итераторов
Улучшение
нашего
проекта
Сравнение
производительности
циклы
Подробнее
Настройка
билдов
профилей
выпуска
Публикация
крейта
Рабочие
области
бинарных
файлов
Расширение
возможностей
добавления
пользовательских
команд
Умные
указатели
указания
данные
куче
умными
указателями
обычными
ссылками
трейта
Выполнение
кода
очистке
умный
указатель
подсчётом
внутренняя
Ссылочные
могут
привести
утечке
памяти
Безбоязненный
параллелизм
потоков
параллельного
выполнения
Пересылка
передачи
потоками
общим
состоянием
Расширяемый
трейтов
объектно
ориентированного
ориентированных
языков
трейт
объектов
допускающих
значения
разных
типов
Реализация
шаблона
проектирования
Шаблоны
Все
места
где
использоваться
Опровержимость
может
шаблон
соответствовать
Расширенные
Небезопасный
код
Продвинутые
типажи
Макросы
Финальный
многопоточного
веб
сервера
однопоточного
Превращение
многопоточный
сервер
Мягкое
завершение
работы
очистка
Приложения
Ключевые
Операторы
символы
Выводимые
Полезные
инструменты
Редакции
Переводы
книги
создаётся
Последняя
коллекция
которую
мы
рассмотрим
будет
хеш
карта
хранит
ключи
типа
Данная
структура
организует
хеширования
множестве
реализована
часто
разными
наименованиями
такими
ассоциативный
массив
карты
полезны
когда
нужно
искать
используя
индекс
это
например
делается
векторах
ключа
который
быть
любого
игре
вы
можете
отслеживать
счёт
каждой
команды
карте
которой
каждый
ключ
название
значение
Имея
имя
получить
её
этом
разделе
базовый
карт
Остальной
набор
полезных
функций
скрывается
объявлении
прежде
советуем
обратиться
документации
стандартной
библиотеке
получения
дополнительной
информации
новой
Создать
пустую
карту
можно
добавить
неё
элементы
листинге
отслеживаем
двух
синей
жёлтой
Синяя
команда
набрала
очков
жёлтая
Листинг
вставка
пары
Обратите
внимание
сначала
указать
строку
подключения
коллекций
трёх
является
наименее
используемой
поэтому
она
подключается
функцией
автоматического
импорта
также
имеют
меньшую
поддержку
стороны
нет
встроенного
макроса
их
конструирования
Подобно
векторам
хранят
свои
Здесь
имеет
качестве
векторы
однородны
должны
иметь
одинаковый
тоже
Доступ
данным
можем
ключу
показано
очкам
хранятся
количество
связанное
командой
результат
Метод
возвращает
какого
то
вернёт
Из
такого
подхода
программе
следует
обрабатывать
вызывая
затем
установки
ноль
содержит
этому
перебирать
каждую
пару
таким
образом
делали
цикл
Этот
печатать
произвольном
порядке
реализуют
типаж
копируются
владением
таких
будут
перемещены
станет
владельцем
этих
Показывает
находятся
владении
они
были
вставлены
использовать
того
вызовом
вставим
указывают
действительными
тех
пор
пока
действительна
поговорим
вопросах
помощи
времён
главы
Обновление
Хотя
увеличиваться
одно
ним
один
момент
времени
обратное
утверждение
неверно
хранить
одинаковое
хотите
изменить
необходимо
решить
случай
уже
назначенное
заменить
старое
новым
полностью
игнорируя
сохранить
игнорировать
новое
добавлять
ещё
имел
Или
было
объединить
Давайте
посмотрим
сделать
вариантов
Перезапись
старых
тот
значением
этим
ключом
заменено
несмотря
вызывает
дважды
содержать
одну
потому
вставляем
одного
Замена
хранимого
конкретном
ключе
напечатает
Начальное
перезаписано
том
случае
Обычно
проверяют
существует
конкретный
предпринимаются
следующие
существующее
должно
оставаться
какое
оно
есть
вставляют
его
него
этого
специальный
называемый
принимает
проверки
входного
параметра
Возвращаемое
перечисление
двумя
вариантами
первый
представляет
которое
существовать
второй
говорит
отсутствует
Допустим
хотим
проверить
имеется
вставить
самое
проделать
Используем
коде
листинга
вставки
определён
так
возвращать
изменяемую
ссылку
соответствующее
варианта
вставлять
параметр
нового
Эта
техника
намного
чище
самостоятельное
логики
более
безопасна
согласуется
правилами
заимствования
выполнении
напечатано
вызов
вставит
изменит
основе
старого
Другим
распространённым
вариантом
использования
поиск
показан
подсчитывает
сколько
раз
определённое
слово
встречается
некотором
тексте
словами
увеличиваем
слову
встретили
впервые
Подсчёт
количества
вхождений
слов
использованием
которая
счётчики
увидите
печатаются
другом
вспомните
писали
секции
итерация
происходит
итератор
срезам
разделённых
пробелам
сохраняем
переменной
присвоить
произвести
разыменование
звёздочки
Изменяемая
ссылка
удаляется
сразу
выхода
цикла
эти
изменения
безопасны
согласуются
Функция
умолчанию
использует
функцию
противостоять
атакам
класса
отказ
обслуживании
таблиц
самый
быстрый
возможных
алгоритмов
данном
производительность
идёт
компромисс
обеспечением
лучшей
безопасности
профилирования
вашего
окажется
используемая
очень
медленная
другой
реализующий
типажах
Главе
Вам
совсем
обязательно
реализовывать
свою
собственную
достаточное
библиотек
предоставляющих
разные
реализации
множеством
общих
Итоги
предоставят
большое
функционала
программ
сохранять
получать
модифицировать
Теперь
готовы
учебные
задания
список
целых
чисел
Создайте
используйте
вектор
верните
списка
среднее
медиану
элемента
середины
сортировки
моду
списке
наибольшее
полезна
Преобразуйте
кодировку
поросячьей
латыни
Первая
согласная
каждого
перемещается
конец
ней
добавляется
окончание
начинающемуся
гласную
становится
Помните
деталях
кодировкой
текстовый
интерфейс
позволяющий
пользователю
имена
сотрудников
названию
отдела
компании
позвольте
всех
людей
отсортированных
отделам
алфавитном
Документация
описывает
методы
векторов
строк
Рекомендуем
воспользоваться
ей
решении
упражнений
Потихоньку
переходим
сложным
программам
которых
операции
потерпеть
неудачу
Наступило
идеальное
обсуждения
