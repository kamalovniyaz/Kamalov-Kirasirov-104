Расширяемый
параллелизм
помощью
трейтов
Язык
программирования
Предисловие
Введение
чего
начать
Установка
Привет
Мир
Программирование
игры
загадки
Общие
концепции
Переменные
изменяемость
Типы
Данных
Функции
Комментарии
Управляющие
конструкции
Понимание
владения
Что
такое
владение
Ссылки
заимствование
Тип
среза
Использование
структур
объединения
связанных
Определение
создание
экземпляров
Пример
программы
использующей
структуры
Синтаксис
метода
Перечисления
сопоставление
образцом
Конструкция
потока
управления
Лаконичный
поток
Управление
растущими
проектами
пакетов
крейтов
модулей
Пакеты
крейты
областью
действия
конфиденциальностью
Пути
элемент
дереве
путей
область
видимости
ключевого
слова
коллекции
Хранение
списков
значений
векторами
закодированного
текста
строками
ключей
связанными
значениями
Обработка
ошибок
Неустранимые
ошибки
Устранимые
трейты
характеристики
время
жизни
Обобщённые
разделяемого
поведения
Валидация
ссылок
сроков
Написание
автоматических
тестов
писать
тесты
выполнением
Организация
Проект
вводом
выводом
командной
строки
Получение
аргументов
Чтение
файла
Рефакторинг
обеспечения
модульности
улучшения
обработки
Разработка
функциональности
библиотеки
разработки
тестирование
Работа
переменными
среды
Запись
сообщений
ошибках
вместо
Функциональные
возможности
языка
итераторы
замыкания
анонимные
которые
захватывают
своё
окружение
последовательности
элементов
итераторов
Улучшение
нашего
проекта
Сравнение
производительности
циклы
Подробнее
Настройка
билдов
профилей
выпуска
Публикация
крейта
Рабочие
области
бинарных
файлов
Расширение
возможностей
добавления
пользовательских
команд
Умные
указатели
указания
данные
куче
умными
указателями
обычными
ссылками
трейта
Выполнение
кода
очистке
умный
указатель
подсчётом
внутренняя
Ссылочные
могут
привести
утечке
памяти
Безбоязненный
потоков
параллельного
выполнения
Пересылка
передачи
потоками
общим
состоянием
объектно
ориентированного
ориентированных
языков
трейт
объектов
допускающих
значения
разных
типов
Реализация
шаблона
проектирования
Шаблоны
Все
места
где
использоваться
Опровержимость
может
шаблон
соответствовать
Расширенные
Небезопасный
код
Продвинутые
типажи
Макросы
Финальный
многопоточного
веб
сервера
однопоточного
Превращение
многопоточный
сервер
Мягкое
завершение
работы
очистка
Приложения
Ключевые
Операторы
символы
Выводимые
Полезные
инструменты
Редакции
Переводы
книги
создаётся
Расширенная
многопоточность
типажей
Интересно
сам
имеет
очень
мало
многопоточности
Почти
которых
мы
говорили
этой
главе
были
частью
стандартной
Ваши
варианты
многопоточностью
ограничиваются
языком
библиотекой
Вы
можете
написать
свой
собственный
функционал
использовать
написанные
другими
Тем
менее
встроены
две
Разрешение
Маркерный
типаж
указывает
типом
реализующим
передаваться
каждый
является
есть
некоторые
исключения
он
быть
потому
клонировали
значение
попытались
передать
клоном
другой
оба
обновить
счётчик
одновременно
причине
реализован
использования
однопоточных
ситуациях
хотите
платить
снижение
Следовательно
система
ограничений
типажа
гарантируют
никогда
сможете
случайно
небезопасно
отправлять
сделать
это
листинге
получили
ошибку
переключились
который
скомпилировался
Любой
полностью
состоящий
автоматически
помечается
примитивные
являются
сырых
указателей
обсудим
доступа
нескольких
реализующий
можно
безопасно
ссылаться
словами
ссылка
означает
ссылку
отправить
Подобно
скомбинированные
также
причинам
которым
котором
семейство
проверки
заимствования
которую
делает
поточно
безопасной
совместного
уже
видели
разделе
Совместное
несколькими
вручную
небезопасна
Поскольку
созданные
типами
должны
реализовывать
эти
Являясь
маркерными
типажами
них
нет
никаких
методов
реализации
Они
полезны
инвариантов
Ручная
этих
включает
себя
реализацию
небезопасного
поговорим
использовании
данный
момент
важная
информация
заключается
том
создания
новых
многопоточных
состоящих
частей
необходимо
тщательно
продумать
гарантии
безопасности
больше
информации
гарантиях
их
соблюдать
Итоги
последний
случай
увидите
книге
будет
главы
более
реалистичного
случая
небольшие
примеры
обсуждаемые
здесь
упоминалось
ранее
языке
того
управлять
многие
решения
реализованы
виде
развиваются
быстрее
стандартная
библиотека
поэтому
обязательно
поищите
Интернете
текущие
современные
предоставляет
каналы
умных
такие
контекстах
анализатор
заимствований
использующий
содержать
гонки
недействительные
Получив
компилирующийся
уверены
успешно
работать
потоках
трудно
обнаружить
других
языках
Многопоточное
концепцией
стоит
опасаться
иди
вперёд
сделай
свои
многопоточными
безбоязненно
Далее
идиоматичных
способах
моделирования
проблем
структурирования
решений
мере
усложнения
ваших
программ
Кроме
идиомы
связаны
теми
которыми
возможно
знакомы
ориентированному
программированию
