Выводимые
трейты
Язык
программирования
Предисловие
Введение
чего
начать
Установка
Привет
Мир
Программирование
игры
загадки
Общие
концепции
Переменные
изменяемость
Типы
Данных
Функции
Комментарии
Управляющие
конструкции
Понимание
владения
Что
такое
владение
Ссылки
заимствование
Тип
среза
Использование
структур
объединения
связанных
Определение
создание
экземпляров
Пример
программы
использующей
структуры
Синтаксис
метода
Перечисления
сопоставление
образцом
Конструкция
потока
управления
Лаконичный
поток
Управление
растущими
проектами
помощью
пакетов
крейтов
модулей
Пакеты
крейты
областью
действия
конфиденциальностью
Пути
элемент
дереве
путей
область
видимости
ключевого
слова
коллекции
Хранение
списков
значений
векторами
закодированного
текста
строками
ключей
связанными
значениями
Обработка
ошибок
Неустранимые
ошибки
Устранимые
характеристики
время
жизни
Обобщённые
разделяемого
поведения
Валидация
ссылок
сроков
Написание
автоматических
тестов
писать
тесты
выполнением
Организация
Проект
вводом
выводом
командной
строки
Получение
аргументов
Чтение
файла
Рефакторинг
обеспечения
модульности
улучшения
обработки
Разработка
функциональности
библиотеки
разработки
тестирование
Работа
переменными
среды
Запись
сообщений
ошибках
вместо
Функциональные
возможности
языка
итераторы
замыкания
анонимные
которые
захватывают
своё
окружение
последовательности
элементов
итераторов
Улучшение
нашего
проекта
Сравнение
производительности
циклы
Подробнее
Настройка
билдов
профилей
выпуска
Публикация
крейта
Рабочие
области
бинарных
файлов
Расширение
возможностей
добавления
пользовательских
команд
Умные
указатели
указания
данные
куче
умными
указателями
обычными
ссылками
трейта
Выполнение
кода
очистке
умный
указатель
подсчётом
внутренняя
Ссылочные
могут
привести
утечке
памяти
Безбоязненный
параллелизм
потоков
параллельного
выполнения
Пересылка
передачи
потоками
общим
состоянием
Расширяемый
трейтов
объектно
ориентированного
ориентированных
языков
трейт
объектов
допускающих
значения
разных
типов
Реализация
шаблона
проектирования
Шаблоны
Все
места
где
использоваться
Опровержимость
может
шаблон
соответствовать
Расширенные
Небезопасный
код
Продвинутые
типажи
Макросы
Финальный
многопоточного
веб
сервера
однопоточного
Превращение
многопоточный
сервер
Мягкое
завершение
работы
очистка
Приложения
Ключевые
Операторы
символы
Полезные
инструменты
Редакции
Переводы
книги
создаётся
Дополнение
многих
частях
мы
обсуждали
атрибут
Вы
могли
применить
объявлению
генерирует
умолчанию
реализации
типажа
который
указали
этом
дополнении
расскажем
можете
использовать
атрибуте
Каждая
секция
содержит
Операции
методы
добавляемые
типажом
представлена
рассказывает
Условия
которых
разрешено
запрещено
реализовывать
типаж
Примеры
ситуаций
требуют
наличие
Вам
понадобилось
поведение
отличное
обратитесь
документации
стандартной
библиотеке
узнать
вручную
реализовать
Перечисленные
здесь
являются
единственными
определёнными
библиотекой
быть
реализованы
ваших
типах
Другие
определённые
имеют
ощутимого
поэтому
решать
их
достижения
целей
нельзя
обрабатывает
форматирование
конечных
пользователей
всегда
должны
сами
рассмотреть
лучший
способ
отображения
конечному
пользователю
Какие
части
типа
разрешены
просмотра
они
найдут
подходящими
Какой
формат
вывода
них
будет
самым
подходящим
Компилятор
знает
ответы
эти
вопросы
он
подобрать
подходящее
стандартное
Список
реализуемых
является
исчерпывающим
собственных
типажей
составляя
свои
списки
включает
себя
процедурных
макросов
были
рассмотрены
разделе
главы
отладочного
отладочное
форматируемых
строках
указать
фигурных
скобок
позволяет
напечатать
объекты
целью
отладки
программисты
использующие
Ваш
смогут
проверить
объект
определённой
точке
обязателен
некоторых
случаях
Например
использовании
макроса
Этот
макрос
печатает
входных
совпадают
Это
программистам
увидеть
почему
равны
сравнения
равенства
сравнить
одного
эквивалентность
операторов
реализует
метод
Когда
используют
два
объекта
поля
одно
поле
отлично
используется
перечислений
каждый
вариант
равен
себе
другим
вариантам
необходимо
сравнивать
имеет
методов
сигнализирует
каждое
значение
аннотированного
равно
самому
применён
реализующих
реализуют
Примером
числа
плавающей
запятой
чисел
говорит
экземпляра
число
друг
другу
необходим
сказать
ключа
одним
тем
порядка
сортировки
реализующий
операторами
возвращает
выстраивают
порядок
которое
упорядочено
числом
Вызов
любым
значением
вернёт
сравнивает
путём
каждого
порядке
котором
объявлены
структуре
варианты
объявленные
ранее
будут
меньше
позже
потребоваться
случайные
заданном
диапазоне
определён
выражением
диапазона
знать
двух
существовать
валидный
реализовывает
потому
реализовывающих
также
требует
структурах
перечислениях
сохранение
типе
хранит
информацию
основе
отсортированных
дублирования
явно
создать
глубокую
копию
процесс
вызывать
специальный
копировать
кучи
Более
детально
смотрите
секции
Способы
взаимодействия
переменных
клонирование
случае
всем
вызывает
каждой
подразумевает
использования
вызова
Срез
владеет
данными
содержащимися
нем
вектор
возвращённый
должен
владеть
этими
объектами
всех
Таким
образом
хранящийся
срезе
дублировать
копируя
хранятся
стеке
произвольный
требуется
секцию
Стековые
Копирование
большей
информации
предотвращения
перегрузки
этих
программистами
нарушило
соглашение
никакой
запускается
предполагать
происходить
быстро
вывести
любого
которого
тривиальную
реализацию
выполняет
ту
задачу
нужен
очень
редко
реализовывающие
небольшую
оптимизацию
то
есть
него
нужно
делает
кратким
делаете
можно
делать
медленнее
требовать
местах
превращения
фиксированного
размера
превратить
произвольного
использованием
хеш
комбинирует
результаты
хранения
эффективного
создавать
функцию
Стандартная
вызовет
Функция
часто
комбинации
синтаксисом
обновления
другой
синтаксиса
настроить
несколько
полей
остальных
установить
результат
хранящегося
