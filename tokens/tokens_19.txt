Тип
среза
Язык
программирования
Предисловие
Введение
чего
начать
Установка
Привет
Мир
Программирование
игры
загадки
Общие
концепции
Переменные
изменяемость
Типы
Данных
Функции
Комментарии
Управляющие
конструкции
Понимание
владения
Что
такое
владение
Ссылки
заимствование
Использование
структур
объединения
связанных
Определение
создание
экземпляров
Пример
программы
использующей
структуры
Синтаксис
метода
Перечисления
сопоставление
образцом
Конструкция
потока
управления
Лаконичный
поток
Управление
растущими
проектами
помощью
пакетов
крейтов
модулей
Пакеты
крейты
областью
действия
конфиденциальностью
Пути
элемент
дереве
путей
область
видимости
ключевого
слова
коллекции
Хранение
списков
значений
векторами
закодированного
текста
строками
ключей
связанными
значениями
Обработка
ошибок
Неустранимые
ошибки
Устранимые
трейты
характеристики
время
жизни
Обобщённые
разделяемого
поведения
Валидация
ссылок
сроков
Написание
автоматических
тестов
Как
писать
тесты
выполнением
Организация
Проект
вводом
выводом
командной
строки
Получение
аргументов
Чтение
файла
Рефакторинг
обеспечения
модульности
улучшения
обработки
Разработка
функциональности
библиотеки
разработки
тестирование
Работа
переменными
среды
Запись
сообщений
ошибках
вместо
Функциональные
возможности
языка
итераторы
замыкания
анонимные
которые
захватывают
своё
окружение
последовательности
элементов
итераторов
Улучшение
нашего
проекта
Сравнение
производительности
циклы
Подробнее
Настройка
билдов
профилей
выпуска
Публикация
крейта
Рабочие
области
бинарных
файлов
Расширение
возможностей
добавления
пользовательских
команд
Умные
указатели
указания
данные
куче
умными
указателями
обычными
ссылками
трейта
Выполнение
кода
очистке
умный
указатель
подсчётом
внутренняя
Ссылочные
могут
привести
утечке
памяти
Безбоязненный
параллелизм
потоков
параллельного
выполнения
Пересылка
передачи
потоками
общим
состоянием
Расширяемый
трейтов
объектно
ориентированного
ориентированных
языков
трейт
объектов
допускающих
значения
разных
типов
Реализация
шаблона
проектирования
Шаблоны
Все
места
где
использоваться
Опровержимость
может
шаблон
соответствовать
Расширенные
Небезопасный
код
Продвинутые
типажи
Макросы
Финальный
многопоточного
веб
сервера
однопоточного
Превращение
многопоточный
сервер
Мягкое
завершение
работы
очистка
Приложения
А
Ключевые
Операторы
символы
Выводимые
Полезные
инструменты
Редакции
Переводы
книги
создаётся
срезы
позволяют
ссылаться
непрерывную
последовательность
всю
коллекцию
Срез
является
своего
рода
ссылкой
поэтому
он
имеет
права
небольшая
проблема
напишите
функцию
которая
принимает
строку
слов
разделённых
пробелами
возвращает
первое
слово
которое
она
находит
этой
строке
Если
функция
пробела
вся
строка
должна
состоять
одного
быть
возвращена
Давайте
рассмотрим
бы
мы
написали
сигнатуру
использования
срезов
понять
проблему
которую
решат
качестве
параметра
хотим
так
всё
порядке
должны
вернуть
самом
деле
нас
нет
способа
говорить
части
Однако
могли
индекс
конца
обозначенного
пробелом
попробуем
показано
Листинге
Файл
Листинг
возвращающая
значение
индекса
байта
параметр
нам
нужно
просмотреть
поэлементно
проверить
преобразуем
нашу
массив
байтов
Далее
создаём
итератор
массиву
байт
используя
метод
обсудим
более
подробно
Главе
данный
момент
знайте
это
который
каждый
оборачивает
результат
этого
часть
кортежа
Первый
возвращаемый
индексом
второй
немного
удобнее
вычислять
самостоятельно
Поскольку
кортеж
можем
использовать
деструктурирования
цикле
указываем
имеющий
кортеже
получаем
ссылку
используем
шаблоне
цикла
ищем
представляющий
пробел
байтового
литерала
находим
возвращаем
позицию
противном
случае
длину
Теперь
есть
способ
узнать
указывающего
конец
первого
сам
число
контексте
Другими
словами
отдельное
гарантии
оно
ещё
будет
действительным
будущем
программу
листинга
использует
Сохранение
результата
вызова
последующего
изменения
содержимого
Данная
программа
компилируется
успешно
работать
того
воспользуемся
переменной
совсем
связано
то
сохраняет
изменений
воспользоваться
значением
получить
приведёт
ошибке
потому
содержимое
изменилось
сохранили
стало
пустой
строкой
вызове
Необходимость
беспокоиться
том
синхронизируется
данными
утомительной
подверженной
ошибкам
этими
индексами
становится
хрупким
напишем
Её
сигнатура
могла
выглядеть
отслеживаем
начальный
конечный
больше
были
рассчитаны
основе
определённом
состоянии
вообще
привязаны
этому
состоянию
три
несвязанные
необходимо
синхронизировать
счастью
решение
данной
проблемы
строковые
Строковый
ссылка
выглядит
следующим
образом
указанную
дополнительном
куске
диапазон
квадратных
скобках
указав
первая
позиция
единицу
последняя
срезе
структура
хранит
начальную
соответствует
минус
Итак
срезом
содержащим
длины
Рисунок
отображает
диаграмме
ссылается
синтаксисом
вы
хотите
можете
отбросить
двумя
точками
они
равны
Таким
ваш
включает
последний
номер
означает
также
оба
всей
Примечание
Индексы
диапазона
строк
располагаться
допустимых
границах
символов
попытаетесь
создать
фрагмент
нарушая
границы
символа
котором
ваша
завершится
ошибкой
целях
введения
предполагаем
этом
разделе
используется
подробное
обсуждение
находится
раздел
главы
полученную
информацию
перепишем
возвращал
обозначения
типа
существует
ища
вхождение
начало
начального
конечного
индексов
вызываем
одно
привязанное
базовым
данным
состоит
точку
количества
Аналогичным
можно
переписать
простой
гораздо
сложнее
испортить
компилятор
гарантирует
останутся
действительными
Помните
ошибку
программе
получили
затем
очистили
наш
стал
недействительным
Этот
был
логически
неправильным
показывал
немедленных
проявятся
позже
попытаемся
делают
эту
невозможной
сообщают
проблеме
нашим
кодом
раньше
версии
вернёт
компиляции
Ошибка
Напомним
правил
заимствования
неизменяемая
взять
изменяемую
обрезать
активной
запрещает
одновременное
существование
изменяемой
формате
неизменяемой
компиляция
завершается
упростил
устранил
целый
класс
литералы
говорили
строковых
литералах
хранящихся
бинарного
знаем
чем
являются
правильно
понимаем
здесь
указывающий
конкретную
двоичного
почему
неизменяемы
параметры
Знание
брать
литералов
приводит
одному
улучшению
его
опытный
пользователь
написал
показанную
позволяет
одну
ту
строкового
передать
напрямую
Эта
гибкость
преимущества
приведения
Неявное
приведение
функциями
методами
получения
фрагмента
делает
полезным
потери
какой
Другие
себе
представить
специфичны
общий
Точно
захотеть
сослаться
массива
сделали
работает
сохраняя
будете
вид
всех
видов
других
коллекций
эти
будем
векторах
Итоги
обеспечивают
безопасность
программах
даёт
вам
контроль
использованием
языки
системного
владелец
автоматически
очищает
выходит
рамки
отлаживать
дополнительный
влияет
множество
частей
концепций
этих
концепциях
протяжении
оставшихся
перейдём
группировку
