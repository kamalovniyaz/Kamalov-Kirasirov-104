Пакеты
крейты
Язык
программирования
Предисловие
Введение
чего
начать
Установка
Привет
Мир
Программирование
игры
загадки
Общие
концепции
Переменные
изменяемость
Типы
Данных
Функции
Комментарии
Управляющие
конструкции
Понимание
владения
Что
такое
владение
Ссылки
заимствование
Тип
среза
Использование
структур
объединения
связанных
Определение
создание
экземпляров
Пример
программы
использующей
структуры
Синтаксис
метода
Перечисления
сопоставление
образцом
Конструкция
потока
управления
Лаконичный
поток
Управление
растущими
проектами
помощью
пакетов
крейтов
модулей
областью
действия
конфиденциальностью
Пути
элемент
дереве
путей
область
видимости
ключевого
слова
коллекции
Хранение
списков
значений
векторами
закодированного
текста
строками
ключей
связанными
значениями
Обработка
ошибок
Неустранимые
ошибки
Устранимые
трейты
характеристики
время
жизни
Обобщённые
разделяемого
поведения
Валидация
ссылок
сроков
Написание
автоматических
тестов
Как
писать
тесты
выполнением
Организация
Проект
вводом
выводом
командной
строки
Получение
аргументов
Чтение
файла
Рефакторинг
обеспечения
модульности
улучшения
обработки
Разработка
функциональности
библиотеки
разработки
тестирование
Работа
переменными
среды
Запись
сообщений
ошибках
вместо
Функциональные
возможности
языка
итераторы
замыкания
анонимные
которые
захватывают
своё
окружение
последовательности
элементов
итераторов
Улучшение
нашего
проекта
Сравнение
производительности
циклы
Подробнее
Настройка
билдов
профилей
выпуска
Публикация
крейта
Рабочие
области
бинарных
файлов
Расширение
возможностей
добавления
пользовательских
команд
Умные
указатели
указания
данные
куче
умными
указателями
обычными
ссылками
трейта
Выполнение
кода
очистке
умный
указатель
подсчётом
внутренняя
Ссылочные
могут
привести
утечке
памяти
Безбоязненный
параллелизм
потоков
параллельного
выполнения
Пересылка
передачи
потоками
общим
состоянием
Расширяемый
трейтов
объектно
ориентированного
ориентированных
языков
трейт
объектов
допускающих
значения
разных
типов
Реализация
шаблона
проектирования
Шаблоны
Все
места
где
использоваться
Опровержимость
может
шаблон
соответствовать
Расширенные
Небезопасный
код
Продвинутые
типажи
Макросы
Финальный
многопоточного
веб
сервера
однопоточного
Превращение
многопоточный
сервер
Мягкое
завершение
работы
очистка
Приложения
А
Ключевые
Операторы
символы
Выводимые
Полезные
инструменты
Редакции
Переводы
книги
создаётся
Первые
части
модульной
системы
мы
рассмотрим
это
Крейт
наименьший
объем
который
компилятор
рассматривает
раз
вы
запустите
передадите
один
файл
исходным
кодом
уже
делали
разделе
запуск
Главы
считает
этот
крейтом
содержать
модули
быть
определены
других
файлах
компилируются
вместе
увидим
следующих
разделах
одним
двух
видов
бинарный
библиотечный
Бинарные
можете
скомпилировать
исполняемые
файлы
запускать
например
программу
каждого
бинарного
должна
функция
именем
которая
определяет
происходит
запуске
исполняемого
создали
сих
пор
были
бинарными
крейтами
Библиотечные
имеют
исполняемый
этого
они
определяют
функциональность
предназначенную
совместного
использования
другими
использовали
Главе
обеспечивает
генерирует
случайные
числа
большинстве
случаев
говорят
виду
используют
взаимозаменяемо
общей
концепцией
библиотека
Корневой
модуль
исходный
которого
начинает
собирать
вашего
подробно
объясним
контроля
закрытости
Пакет
набор
одного
нескольких
предоставляющий
содержит
котором
описывается
эти
самом
деле
содержащий
инструмента
создания
своего
также
зависит
Другие
проекты
тоже
зависеть
библиотечного
использовать
ту
логику
инструмент
сколько
угодно
более
должен
Давайте
пройдёмся
тому
создаём
Сначала
введём
команду
того
запустили
используем
чтобы
увидеть
создал
каталоге
есть
дающий
нам
каталог
Откройте
текстовом
редакторе
обратите
внимание
нём
нет
упоминаний
следует
соглашению
том
тем
пакета
Точно
так
знает
является
корневым
модулем
передаёт
корневого
модуля
сборки
Здесь
нас
означает
он
имеет
два
оба
иметь
несколько
помещая
их
каждый
будет
отдельным
бинарным
