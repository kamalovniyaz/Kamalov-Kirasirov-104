Пересылка
сообщений
передачи
данных
потоками
Язык
программирования
Предисловие
Введение
чего
начать
Установка
Привет
Мир
Программирование
игры
загадки
Общие
концепции
Переменные
изменяемость
Типы
Функции
Комментарии
Управляющие
конструкции
Понимание
владения
Что
такое
владение
Ссылки
заимствование
Тип
среза
Использование
структур
объединения
связанных
Определение
создание
экземпляров
Пример
программы
использующей
структуры
Синтаксис
метода
Перечисления
сопоставление
образцом
Конструкция
потока
управления
Лаконичный
поток
Управление
растущими
проектами
помощью
пакетов
крейтов
модулей
Пакеты
крейты
областью
действия
конфиденциальностью
Пути
элемент
дереве
путей
область
видимости
ключевого
слова
коллекции
Хранение
списков
значений
векторами
закодированного
текста
строками
ключей
связанными
значениями
Обработка
ошибок
Неустранимые
ошибки
Устранимые
трейты
характеристики
время
жизни
Обобщённые
разделяемого
поведения
Валидация
ссылок
сроков
Написание
автоматических
тестов
писать
тесты
выполнением
Организация
Проект
вводом
выводом
командной
строки
Получение
аргументов
Чтение
файла
Рефакторинг
обеспечения
модульности
улучшения
обработки
Разработка
функциональности
библиотеки
разработки
тестирование
Работа
переменными
среды
Запись
ошибках
вместо
Функциональные
возможности
языка
итераторы
замыкания
анонимные
которые
захватывают
своё
окружение
последовательности
элементов
итераторов
Улучшение
нашего
проекта
Сравнение
производительности
циклы
Подробнее
Настройка
билдов
профилей
выпуска
Публикация
крейта
Рабочие
области
бинарных
файлов
Расширение
возможностей
добавления
пользовательских
команд
Умные
указатели
указания
данные
куче
умными
указателями
обычными
ссылками
трейта
Выполнение
кода
очистке
умный
указатель
подсчётом
внутренняя
Ссылочные
могут
привести
утечке
памяти
Безбоязненный
параллелизм
потоков
параллельного
выполнения
общим
состоянием
Расширяемый
трейтов
объектно
ориентированного
ориентированных
языков
трейт
объектов
допускающих
значения
разных
типов
Реализация
шаблона
проектирования
Шаблоны
Все
места
где
использоваться
Опровержимость
может
шаблон
соответствовать
Расширенные
Небезопасный
код
Продвинутые
типажи
Макросы
Финальный
многопоточного
веб
сервера
однопоточного
Превращение
многопоточный
сервер
Мягкое
завершение
работы
очистка
Приложения
Ключевые
Операторы
символы
Выводимые
Полезные
инструменты
Редакции
Переводы
книги
создаётся
Передача
большую
популярность
безопасной
многопоточности
набирает
способ
называемый
этом
случае
потоки
акторы
взаимодействуют
друг
другом
путём
отправки
данными
Идея
этого
подхода
выражена
слогане
документации
таким
образом
стоит
передавать
информацию
разделяемой
лучше
делитесь
памятью
передавая
многопоточных
стандартной
библиотеке
реализованы
каналы
Канал
программировании
общепринятый
механизм
которого
одного
отправляются
другому
потоку
Вы
можете
представить
направленное
движение
воды
например
ручей
реку
поместите
какую
вещь
воду
резиновую
уточку
она
будет
плыть
вниз
течению
тех
пор
пока
это
течение
кончится
состоит
двух
половин
передатчика
приёмника
Передатчик
место
вверх
опускаете
резиновых
уточек
приёмник
резиновые
уточки
оказываются
конце
Одна
часть
вашего
вызывает
методы
хотите
отправить
другая
проверяет
принимающую
сторону
наличие
поступающих
считается
закрытым
передающая
принимающая
его
половина
уничтожена
Давайте
создадим
программу
которой
один
генерировать
отправлять
их
другой
получать
распечатывать
Мы
будем
простые
используя
проиллюстрировать
эту
функцию
того
ознакомитесь
этим
методом
сможете
использовать
любыми
которым
необходимо
взаимодействовать
быть
система
чата
несколько
вычислительных
выполняют
свою
расчёта
затем
отправляют
отдельный
который
уже
агрегирует
полученные
результаты
Сначала
листинге
ничего
ним
делать
Обратите
внимание
этот
ещё
компилируется
потому
сказать
какой
хотим
Файл
Листинг
канала
присваивание
переменным
создаём
новый
означает
производителей
потребитель
Коротко
стандартная
библиотека
реализует
иметь
отправляющих
источников
генерирующих
одну
которая
потребляет
эти
Представьте
ручьёв
втекают
всё
плывёт
любому
концов
окажется
одной
реке
Сейчас
начнём
производителя
заработает
добавим
Функция
возвращает
кортеж
первый
является
отправляющей
стороной
передатчиком
вторым
элементом
сторона
получатель
Аббревиатуры
традиционно
используются
многих
полях
соответственно
поэтому
называем
соответствующие
так
используем
инструкцию
шаблоном
деструктурирует
кортежи
обсудим
шаблонов
инструкциях
деструктуризацию
главе
знайте
описанное
инструкции
удобным
способом
извлечения
частей
кортежа
возвращаемых
переместим
передающую
порождённый
он
отправлял
строку
связывался
основным
потоком
показано
похоже
то
поместили
утку
отправили
сообщение
Перемещение
созданный
отправка
сообщения
Опять
создания
нового
перемещения
замыкание
владел
должен
владеть
возможность
имеет
метод
принимает
значение
которое
удалён
некуда
операция
вернёт
ошибку
примере
вызываем
паники
реальном
приложении
обработали
ситуацию
более
корректно
вернитесь
раз
разобрать
стратегии
правильной
получим
основном
потоке
извлечение
резиновой
реки
чате
получаем
печатаем
два
важных
сокращением
блокирует
основного
ждёт
будут
переданы
каналу
получено
виде
закроется
дать
понять
больше
никаких
поступит
очередь
сразу
результат
содержащее
оно
доступно
поступило
полезно
есть
происходит
ожидание
можем
написать
цикл
времени
обрабатывает
промежутке
выполняет
другую
работу
момента
вновь
произведена
проверка
использовали
простоты
нас
нет
никакой
ждать
блокировка
уместна
запуске
листинга
увидим
напечатанное
Отлично
Правила
играют
жизненно
важную
роль
отправке
они
помогают
безопасный
Предотвращение
многопоточном
преимуществом
размышлений
владении
всех
ваших
программах
проведём
эксперимент
показать
действуют
совместно
предотвращения
проблем
попытаемся
порождённом
отправим
Попробуйте
скомпилировать
почему
разрешён
Попытка
Здесь
пытаемся
напечатать
Разрешить
было
плохой
идеей
отправлено
текущий
мог
изменить
удалить
прежде
попытались
снова
Потенциально
изменения
ошибкам
ожидаемым
результатам
противоречивых
несуществующих
Однако
выдаёт
нам
Наша
ошибка
привела
ошибке
компиляции
вступает
своим
параметром
когда
перемещается
становится
владельцем
параметра
останавливает
случайного
использования
анализатор
заимствования
порядке
нескольких
получателем
выполняется
нем
неясно
отдельных
общаются
внесли
некоторые
докажут
работает
одновременно
теперь
паузу
секунду
каждым
сообщением
пауза
ними
вектор
строк
основному
перебираем
отправляя
каждую
отдельности
делаем
вызывая
значением
равным
секунде
явно
итератор
каждого
полученного
закрыт
итерация
закончится
выполнении
должны
увидеть
следующий
вывод
паузой
каждой
строкой
Поскольку
приостанавливает
задерживает
основной
ожидает
получения
порождённого
отправителей
клонирования
Ранее
упоминали
аббревиатура
множество
поставщиков
полной
мере
расширим
создав
одному
тому
получателю
сделать
клонировав
вызовем
передатчике
результате
сможем
передать
первому
порождённому
Исходный
передадим
второму
даст
каждый
которых
отправляет
разные
запустите
выглядеть
примерно
зависимости
вашей
системы
поведение
делает
интересным
сложным
поэкспериментируете
задавая
различные
аргумента
потоках
запуск
недетерминированным
выводиться
посмотрели
работают
рассмотрим
