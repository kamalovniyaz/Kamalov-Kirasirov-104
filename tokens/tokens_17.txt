Что
такое
владение
Язык
программирования
Предисловие
Введение
чего
начать
Установка
Привет
Мир
Программирование
игры
загадки
Общие
концепции
Переменные
изменяемость
Типы
Данных
Функции
Комментарии
Управляющие
конструкции
Понимание
владения
Ссылки
заимствование
Тип
среза
Использование
структур
объединения
связанных
Определение
создание
экземпляров
Пример
программы
использующей
структуры
Синтаксис
метода
Перечисления
сопоставление
образцом
Конструкция
потока
управления
Лаконичный
поток
Управление
растущими
проектами
помощью
пакетов
крейтов
модулей
Пакеты
крейты
областью
действия
конфиденциальностью
Пути
элемент
дереве
путей
область
видимости
ключевого
слова
коллекции
Хранение
списков
значений
векторами
закодированного
текста
строками
ключей
связанными
значениями
Обработка
ошибок
Неустранимые
ошибки
Устранимые
трейты
характеристики
время
жизни
Обобщённые
разделяемого
поведения
Валидация
ссылок
сроков
Написание
автоматических
тестов
Как
писать
тесты
выполнением
Организация
Проект
вводом
выводом
командной
строки
Получение
аргументов
Чтение
файла
Рефакторинг
обеспечения
модульности
улучшения
обработки
Разработка
функциональности
библиотеки
разработки
тестирование
Работа
переменными
среды
Запись
сообщений
ошибках
вместо
Функциональные
возможности
языка
итераторы
замыкания
анонимные
которые
захватывают
своё
окружение
последовательности
элементов
итераторов
Улучшение
нашего
проекта
Сравнение
производительности
циклы
Подробнее
Настройка
билдов
профилей
выпуска
Публикация
крейта
Рабочие
области
бинарных
файлов
Расширение
возможностей
добавления
пользовательских
команд
Умные
указатели
указания
данные
куче
умными
указателями
обычными
ссылками
трейта
Выполнение
кода
очистке
умный
указатель
подсчётом
внутренняя
Ссылочные
могут
привести
утечке
памяти
Безбоязненный
параллелизм
потоков
параллельного
выполнения
Пересылка
передачи
потоками
общим
состоянием
Расширяемый
трейтов
объектно
ориентированного
ориентированных
языков
трейт
объектов
допускающих
значения
разных
типов
Реализация
шаблона
проектирования
Шаблоны
Все
места
где
использоваться
Опровержимость
может
шаблон
соответствовать
Расширенные
Небезопасный
код
Продвинутые
типажи
Макросы
Финальный
многопоточного
веб
сервера
однопоточного
Превращение
многопоточный
сервер
Мягкое
завершение
работы
очистка
Приложения
А
Ключевые
Операторы
символы
Выводимые
Полезные
инструменты
Редакции
Переводы
книги
создаётся
это
набор
правил
определяющих
программа
языке
управляет
памятью
так
иначе
должны
управлять
тем
они
используют
память
компьютера
Некоторые
языки
имеют
сборщик
мусора
регулярно
отслеживающий
неиспользуемую
других
языках
программист
должен
явно
выделять
освобождать
используется
третий
подход
управляется
систему
набором
проверяются
компилятором
нарушении
любого
будет
скомпилирована
одна
особенностей
системы
замедлит
работу
вашей
Поскольку
является
новой
концепцией
многих
программистов
требуется
некоторое
привыкнуть
ней
Хорошая
новость
заключается
том
больше
вас
опыта
правилами
легче
вам
естественным
образом
разрабатывать
безопасный
эффективный
Держитесь
сдавайтесь
даст
основу
понимания
всех
остальных
делающих
уникальным
этой
главе
вы
изучите
примерах
сфокусированы
наиболее
часто
используемой
структуре
строках
Стек
куча
Многие
требуют
слишком
думали
стеке
системного
одним
которых
какое
значение
находится
влияет
поведение
принятие
вами
определённых
решений
описано
призму
стека
кучи
позже
пока
краткое
пояснение
части
доступные
вашему
коду
использования
Однако
структурированы
разному
хранит
порядке
их
получения
удаляет
обратном
называется
последним
пришёл
первым
ушёл
Подумайте
стопке
тарелок
добавляете
тарелки
кладёте
сверху
стопки
когда
нужна
тарелка
берёте
одну
Добавление
удаление
посередине
снизу
сработает
помещением
извлечением
хранящиеся
иметь
известный
фиксированный
размер
компиляции
неизвестен
измениться
храниться
устроена
менее
организованно
кучу
запрашиваете
определённый
объём
пространства
Операционная
система
находит
свободный
участок
достаточного
размера
помечает
его
используемый
возвращает
являющийся
адресом
этого
участка
Этот
процесс
выделением
иногда
сокращается
выделения
помещение
считается
имеет
можно
расположить
понадобятся
актуальные
придётся
проследовать
указателю
Представьте
сидите
ресторане
входите
называете
количество
человек
группе
персонал
стол
которого
хватит
ведёт
туда
Если
кто
то
группы
опоздает
он
спросить
куда
посадили
найти
происходит
более
быстро
выделение
потому
должна
искать
место
размещения
информации
всегда
верхушке
сравнения
требует
сначала
затем
произвести
подготовки
следующему
выделению
Доступ
данным
медленнее
нужно
следовать
адресу
указателя
добраться
Современные
процессоры
работают
быстрее
меньше
прыгают
Продолжая
аналогию
рассмотрим
официанта
принимающего
заказы
столов
эффективно
получить
столом
прежде
переходить
столу
заказа
стола
снова
одного
В
было
бы
гораздо
медленным
делом
Точно
процессор
выполнять
свою
лучше
работает
данными
находятся
близко
другим
далеко
быть
ваш
вызывает
функцию
переданные
неё
потенциально
включающие
локальные
помещаются
функция
завершается
эти
извлекаются
Отслеживание
того
какие
минимизация
количества
дублирующихся
неиспользуемых
исчерпать
пространство
проблемы
решает
поймёте
думать
знание
основная
цель
помочь
объяснить
почему
оно
Правила
первых
давайте
взглянем
Помните
этих
правилах
мы
работаем
примерами
иллюстрируют
каждого
есть
владелец
У
один
момент
времени
покидает
удаляется
переменной
Теперь
прошли
базовый
будем
включать
весь
примеры
Поэтому
будете
этому
курсу
убедитесь
следующие
помещены
вручную
результате
наши
будут
лаконичными
позволит
нам
сосредоточиться
реальных
деталях
шаблонном
коде
качестве
первого
примера
некоторых
переменных
диапазон
допустим
Возьмём
следующую
переменную
Переменная
относится
строковому
литералу
жёстко
прописано
тексте
нашей
действительна
момента
её
объявления
конца
текущей
листинге
показана
комментариями
указывающими
допустима
Листинг
которой
она
Другими
словами
здесь
два
важных
появляется
действительной
остаётся
выхода
границы
этом
этапе
объяснения
взаимосвязь
областями
допустимостью
аналогична
той
существует
опираться
введя
демонстрации
сложный
те
обсуждали
Главы
рассмотренные
ранее
значит
размещены
извлечены
него
закончится
тривиально
скопированы
создания
независимой
копии
другой
использовать
самое
хотим
посмотреть
выяснить
узнаёт
очистить
отличный
сконцентрируемся
тех
частях
связаны
владением
аспекты
также
применимы
сложным
типам
независимо
предоставлены
стандартной
библиотекой
созданы
подробно
обсудим
уже
видели
строковые
литералы
строковое
программе
удобны
подходят
каждой
ситуации
можем
хотеть
текст
причин
неизменны
каждое
известно
написания
захотим
принять
сохранить
пользовательский
ввод
таких
ситуаций
ещё
строковый
выделенными
хранить
который
можете
создать
строкового
литерала
используя
например
Оператор
Двойное
двоеточие
позволяет
имён
данной
конкретной
типом
иное
имя
разделе
раздел
ходе
обсуждения
пространств
модулями
обращения
элементу
Строка
такого
типа
изменяема
чем
тут
разница
строку
изменить
нельзя
способы
случае
знаем
содержимое
итоговом
исполняемом
файле
Причина
быстрые
эффективные
неизменяемости
К
сожалению
поместить
неопределённый
кусок
выполняемый
файл
меняться
поддерживать
изменяемый
увеличивающийся
необходимо
всего
содержимого
объем
означает
запрашиваться
операционной
Необходим
способ
возврата
системе
закончили
Первая
часть
выполняется
нами
вызываем
запрашивает
необходимую
довольно
похоже
вторая
отличается
сборщиком
которая
отслеживается
очищается
большинстве
сборщика
обязаны
сами
определять
вызывать
явного
освобождения
делали
запроса
Правильное
процесса
исторически
сложной
проблемой
забудем
освободить
потеряна
сделаем
рано
нас
недопустимая
Сделать
дважды
тоже
ошибкой
соединить
ровно
выбирает
путь
автоматически
возвращается
владеющая
выходит
версия
листинга
котором
естественный
вернуть
нашему
обратно
распределителю
пределы
специальную
Эта
автор
закрывающей
фигурной
скобки
Примечание
паттерн
ресурсов
конце
элемента
ресурса
инициализация
англ
покажется
знакомой
использовали
оказывает
глубокое
влияние
Сейчас
казаться
простым
сложных
ситуациях
неожиданным
хочется
несколько
использующих
выделенные
Изучим
Взаимодействие
перемещения
взаимодействовать
одними
теми
целого
числа
Присвоение
целочисленного
догадаться
делает
привязать
копию
две
обе
равны
самом
деле
целые
простые
известным
фиксированным
размером
версию
выглядит
очень
предположить
сделает
привяжет
Но
совсем
Взгляните
рисунок
увидеть
капотом
состоит
трёх
частей
показанных
слева
хранится
длина
ёмкость
группа
Справа
содержит
представление
содержащей
привязанное
байтах
настоящее
использует
общий
получил
распределителя
длиной
ёмкостью
контексте
данный
игнорировать
присваиваем
значению
копируются
копируем
длину
указывает
показано
рис
имеющей
длины
ёмкости
выглядела
скопировал
сделал
операция
могла
дорогой
точки
зрения
были
большими
вариант
скопирует
сказали
очищает
оба
указывают
одно
проблема
выходят
пытаться
ту
ошибка
двойного
одной
безопасности
упоминаемых
Освобождение
повреждению
уязвимостям
обеспечить
безопасность
считает
недействительным
Следовательно
ничего
Посмотрите
пытаетесь
получите
похожую
ошибку
недействительную
ссылку
слышали
термины
поверхностное
копирование
работе
языками
концепция
копирования
вероятно
звучит
поверхностной
аннулирует
первую
называть
поверхностным
копированием
перемещением
примере
был
перемещён
Итак
рисунке
признан
нашу
проблему
Такой
выбор
дизайна
даёт
дополнительное
преимущество
никогда
создавать
глубокие
ваших
любое
автоматическое
считать
недорогим
клонирования
глубоко
скопировать
метод
называемый
методов
методы
являются
общей
чертой
встречались
ними
отлично
очевидно
приводит
поведению
представленному
видите
вызов
знаете
выполнении
некоторого
дорогим
визуальным
индикатором
нестандартное
Стековые
особенность
говорили
была
показа
кажется
противоречит
тому
узнали
нет
вызова
всё
действителен
такие
известен
полностью
хранятся
фактических
создаются
которым
хотели
предотвратить
доступность
создадим
разницы
глубоким
ничем
обычного
поверхностного
опустить
специальная
аннотация
называемая
типажом
которую
размещать
типах
хранящихся
поговорим
реализует
типаж
перемещаются
действительными
присвоения
аннотировать
любая
произошло
особенное
добавляем
аннотацию
типу
получим
узнать
добавить
реализации
типажа
смотрите
Производные
приложении
реализуют
проверить
документацию
уверенности
правило
простых
скалярных
реализовывать
никакие
некоторой
формой
целочисленные
Логический
возможные
плавающей
запятой
Символьный
Кортежи
содержат
кортеж
Механика
присвоении
Передача
приведёт
перемещению
копированию
присваивание
некоторыми
аннотациями
показывающими
входят
аннотированными
владельцами
попытаться
выдаст
статические
проверки
защищают
Попробуйте
предотвращают
Возвращение
Возвращаемые
передавать
право
показан
возвращающей
такими
права
каждый
раз
следует
одному
шаблону
перемещает
содержащая
очищено
функцией
перемещены
немного
утомительно
использовала
становилась
владельцем
раздражает
передаём
должно
передано
дополнение
любым
полученным
тела
захотеть
возвращать
кортежа
возврат
параметры
высокопарно
многословно
счастью
возможность
