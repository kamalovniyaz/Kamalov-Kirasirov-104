Умные
указатели
Язык
программирования
Предисловие
Введение
чего
начать
Установка
Привет
Мир
Программирование
игры
загадки
Общие
концепции
Переменные
изменяемость
Типы
Данных
Функции
Комментарии
Управляющие
конструкции
Понимание
владения
Что
такое
владение
Ссылки
заимствование
Тип
среза
Использование
структур
объединения
связанных
Определение
создание
экземпляров
Пример
программы
использующей
структуры
Синтаксис
метода
Перечисления
сопоставление
образцом
Конструкция
потока
управления
Лаконичный
поток
Управление
растущими
проектами
помощью
пакетов
крейтов
модулей
Пакеты
крейты
областью
действия
конфиденциальностью
Пути
элемент
дереве
путей
область
видимости
ключевого
слова
коллекции
Хранение
списков
значений
векторами
закодированного
текста
строками
ключей
связанными
значениями
Обработка
ошибок
Неустранимые
ошибки
Устранимые
трейты
характеристики
время
жизни
Обобщённые
разделяемого
поведения
Валидация
ссылок
сроков
Написание
автоматических
тестов
Как
писать
тесты
выполнением
Организация
Проект
вводом
выводом
командной
строки
Получение
аргументов
Чтение
файла
Рефакторинг
обеспечения
модульности
улучшения
обработки
Разработка
функциональности
библиотеки
разработки
тестирование
Работа
переменными
среды
Запись
сообщений
ошибках
вместо
Функциональные
возможности
языка
итераторы
замыкания
анонимные
которые
захватывают
своё
окружение
последовательности
элементов
итераторов
Улучшение
нашего
проекта
Сравнение
производительности
циклы
Подробнее
Настройка
билдов
профилей
выпуска
Публикация
крейта
Рабочие
области
бинарных
файлов
Расширение
возможностей
добавления
пользовательских
команд
указания
данные
куче
умными
указателями
обычными
ссылками
трейта
Выполнение
кода
очистке
умный
указатель
подсчётом
внутренняя
Ссылочные
могут
привести
утечке
памяти
Безбоязненный
параллелизм
потоков
параллельного
выполнения
Пересылка
передачи
потоками
общим
состоянием
Расширяемый
трейтов
объектно
ориентированного
ориентированных
языков
трейт
объектов
допускающих
значения
разных
типов
Реализация
шаблона
проектирования
Шаблоны
Все
места
где
использоваться
Опровержимость
может
шаблон
соответствовать
Расширенные
Небезопасный
код
Продвинутые
типажи
Макросы
Финальный
многопоточного
веб
сервера
однопоточного
Превращение
многопоточный
сервер
Мягкое
завершение
работы
очистка
Приложения
А
Ключевые
Операторы
символы
Выводимые
Полезные
инструменты
Редакции
Переводы
книги
создаётся
общая
концепция
переменной
которая
содержит
адрес
участка
Этот
относится
указывает
некоторые
другие
Наиболее
разновидность
указателя
это
ссылка
которой
вы
узнали
главы
обозначаются
символом
заимствуют
значение
которое
указывают
Они
имеют
каких
специальных
ссылаться
никаких
накладных
расходов
другой
стороны
являются
структурами
действуют
также
дополнительные
метаданные
умных
указателей
уникальна
возникли
существуют
других
языках
В
есть
разные
определённые
стандартной
библиотеке
обеспечивают
функциональность
выходящую
рамки
Одним
примеров
который
мы
рассмотрим
этой
главе
является
умного
подсчёт
позволяет
иметь
несколько
владельцев
отслеживания
количества
остаётся
очищает
его
концепцией
заимствования
имеет
дополнительное
различие
то
часто
владеют
данными
Ранее
уже
сталкивались
книге
называли
их
так
например
Оба
этих
типа
считаются
потому
некоторой
позволяют
ею
манипулировать
них
гарантии
хранит
свой
размер
виде
метаданных
гарантирует
содержимое
всегда
будет
кодировке
обычно
реализуются
Характерной
чертой
отличает
обычной
реализованы
Типаж
экземпляру
вести
себя
можете
написать
работающий
ним
ссылкой
умным
указателем
запускаться
экземпляр
выйдет
обсудим
типажа
продемонстрируем
почему
важны
Учитывая
паттерн
паттерном
используемым
эта
глава
описывает
существующие
Множество
библиотек
свои
охватим
распространённые
распределения
счётчика
допускает
множественное
доступ
которым
осуществляется
обеспечивает
правила
времени
компиляции
Дополнительно
внутренней
изменчивости
неизменяемый
предоставляет
изменения
своего
внутреннего
зацикленности
приводить
предотвратить
Приступим
