Обобщённые
типы
данных
Язык
программирования
Предисловие
Введение
чего
начать
Установка
Привет
Мир
Программирование
игры
загадки
Общие
концепции
Переменные
изменяемость
Функции
Комментарии
Управляющие
конструкции
Понимание
владения
Что
такое
владение
Ссылки
заимствование
Тип
среза
Использование
структур
объединения
связанных
Определение
создание
экземпляров
Пример
программы
использующей
структуры
Синтаксис
метода
Перечисления
сопоставление
образцом
Конструкция
потока
управления
Лаконичный
поток
Управление
растущими
проектами
помощью
пакетов
крейтов
модулей
Пакеты
крейты
областью
действия
конфиденциальностью
Пути
элемент
дереве
путей
область
видимости
ключевого
слова
коллекции
Хранение
списков
значений
векторами
закодированного
текста
строками
ключей
связанными
значениями
Обработка
ошибок
Неустранимые
ошибки
Устранимые
трейты
характеристики
время
жизни
разделяемого
поведения
Валидация
ссылок
сроков
Написание
автоматических
тестов
Как
писать
тесты
выполнением
Организация
Проект
вводом
выводом
командной
строки
Получение
аргументов
Чтение
файла
Рефакторинг
обеспечения
модульности
улучшения
обработки
Разработка
функциональности
библиотеки
разработки
тестирование
Работа
переменными
среды
Запись
сообщений
ошибках
вместо
Функциональные
возможности
языка
итераторы
замыкания
анонимные
которые
захватывают
своё
окружение
последовательности
элементов
итераторов
Улучшение
нашего
проекта
Сравнение
производительности
циклы
Подробнее
Настройка
билдов
профилей
выпуска
Публикация
крейта
Рабочие
области
бинарных
файлов
Расширение
возможностей
добавления
пользовательских
команд
Умные
указатели
указания
данные
куче
умными
указателями
обычными
ссылками
трейта
Выполнение
кода
очистке
умный
указатель
подсчётом
внутренняя
Ссылочные
могут
привести
утечке
памяти
Безбоязненный
параллелизм
потоков
параллельного
выполнения
Пересылка
передачи
потоками
общим
состоянием
Расширяемый
трейтов
объектно
ориентированного
ориентированных
языков
трейт
объектов
допускающих
значения
разных
типов
Реализация
шаблона
проектирования
Шаблоны
Все
места
где
использоваться
Опровержимость
может
шаблон
соответствовать
Расширенные
Небезопасный
код
Продвинутые
типажи
Макросы
Финальный
многопоточного
веб
сервера
однопоточного
Превращение
многопоточный
сервер
Мягкое
завершение
работы
очистка
Приложения
А
Ключевые
Операторы
символы
Выводимые
Полезные
инструменты
Редакции
Переводы
книги
создаётся
Мы
используем
объявления
функций
затем
можно
использовать
различными
конкретными
типами
Давайте
сначала
посмотрим
объявлять
методы
используя
обсудим
влияют
производительность
объявлении
объявляем
функцию
обобщёнными
размещаем
сигнатуре
обычно
указываем
возвращаемого
делаем
более
гибким
предоставляем
большую
функциональность
вызове
нашей
предотвращая
дублирование
Рассмотрим
функцией
Листинг
показывает
две
каждая
которых
находит
самое
большое
значение
срезе
своего
типа
Позже
объединим
их
одну
использующую
Файл
отличающиеся
именем
типом
обрабатываемых
Функция
уже
встречалась
нам
извлекли
её
листинге
боролись
дублированием
она
наибольшее
Тело
этих
одинаковое
поэтому
избавимся
дублируемого
параметр
обобщённого
одной
параметризации
новой
объявляемой
нужно
дать
имя
обобщённому
типу
так
это
любой
идентификатор
имени
параметра
будем
потому
соглашению
имена
параметров
должны
быть
короткими
длиной
один
символ
именование
делается
нотации
Сокращение
буквы
является
стандартным
выбором
большинства
программистов
использующих
теле
объявить
компилятор
знал
означает
Аналогично
раньше
его
Чтобы
определить
обобщённую
поместим
объявление
имён
треугольные
скобки
списком
здесь
читается
обобщённой
Эта
имеет
который
срезом
возвращает
этого
использованием
обобщённых
также
можем
вызвать
Данный
пока
будет
компилироваться
исправим
концу
раздела
использующая
параметры
ещё
компилируется
скомпилируем
программу
сейчас
получим
следующую
ошибку
подсказке
упоминается
типажом
поговорим
следующем
разделе
ошибка
указывает
работать
всех
возможных
хотим
сравнивать
те
упорядочить
значит
сравнить
было
задействовать
сравнения
стандартная
библиотека
типаж
вы
можете
реализовать
смотрите
дополнение
большей
информации
Следуя
совету
сообщении
компилятора
ограничим
теми
вариантами
поддерживают
тогда
успешно
скомпилируется
реализует
определении
использующие
одном
нескольких
своих
полях
синтаксиса
структуру
хранить
поля
координат
любого
структура
содержащая
использования
очень
похож
треугольных
скобок
сразу
названия
тех
местах
ранее
указывали
бы
конкретные
обобщённый
определения
оба
имеют
одинаковый
каким
он
являлся
создадим
экземпляр
показано
наш
одного
они
тот
этом
примере
присваиваем
целочисленное
переменной
сообщаем
компилятору
целым
числом
экземпляра
имеющее
отличный
целого
числа
нашему
определению
должен
иметь
несоответствия
являются
несколько
Например
изменим
таким
образом
оно
использовало
обобщена
двух
Теперь
разрешены
показанные
экземпляры
сколь
угодно
много
делать
большом
количестве
тяжело
читать
вашем
коде
требуется
возможно
стоит
разбить
мелкие
части
определениях
перечислений
вариантах
раз
перечисление
предоставленное
стандартной
библиотекой
которое
использовали
главе
должно
вам
понятно
видите
обобщённым
два
варианта
вариант
содержит
одно
никакого
выразить
абстрактную
концепцию
необязательного
эту
абстракцию
независимо
того
упоминали
примером
такого
содержащий
определением
удобно
везде
операции
выполнены
возвращая
неуспешно
то
делали
открытии
заполнялось
был
открыт
возникали
какие
проблемы
встречаете
ситуации
определений
отличаются
содержащихся
них
устранить
методов
показана
которую
определили
добавленным
неё
методом
которая
возвращать
ссылку
поле
метод
Обратите
внимание
случае
реализуем
Объявив
универсальным
после
угловых
скобках
конкретным
могли
выбрать
другое
отличное
использованного
используют
написанные
использует
будут
определены
какой
конкретный
конечном
итоге
подставлен
указать
ограничения
разрешено
используется
произвольный
определяем
никакие
блок
применяется
структуре
имеющей
Этот
другие
вычисляет
насколько
далеко
наша
точка
находится
точки
координатами
математические
доступные
плавающей
точкой
всегда
совпадают
аналогами
использующимися
сигнатурах
этой
очевидным
используются
сигнатуры
создаёт
новый
берётся
переданной
переменная
использующий
используемых
значением
структурой
строковый
срез
Вызов
аргументом
создаст
нас
взят
макроса
выведет
Цель
примера
продемонстрировать
ситуацию
которой
некоторые
объявлены
объявляются
относятся
методу
использующего
задаться
вопросом
возникают
дополнительные
издержки
использовании
Хорошая
новость
том
ваша
программа
работает
ничуть
медленнее
работала
конкретных
В
достигается
компиляции
помощи
мономорфизации
Мономорфизация
процесс
превращения
путём
подстановки
использующихся
процессе
выполняет
шаги
противоположные
тем
создания
просматривает
вызывается
генерирует
использовавшихся
вызова
обобщённом
компилирует
мономорфизацию
процесса
считывает
были
использованы
экземплярах
определяет
вида
другой
разворачивает
обобщённое
специализированные
самым
заменяя
Мономорфизированная
версия
выглядит
примерно
отличные
иллюстрации
заменяется
определениями
созданными
компилятором
Поскольку
определяющий
каждом
экземпляре
платим
запускается
точно
продублировали
каждое
вручную
делает
чрезвычайно
эффективными
