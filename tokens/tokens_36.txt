Хранение
закодированного
текста
строками
Язык
программирования
Предисловие
Введение
чего
начать
Установка
Привет
Мир
Программирование
игры
загадки
Общие
концепции
Переменные
изменяемость
Типы
Данных
Функции
Комментарии
Управляющие
конструкции
Понимание
владения
Что
такое
владение
Ссылки
заимствование
Тип
среза
Использование
структур
объединения
связанных
Определение
создание
экземпляров
Пример
программы
использующей
структуры
Синтаксис
метода
Перечисления
сопоставление
образцом
Конструкция
потока
управления
Лаконичный
поток
Управление
растущими
проектами
помощью
пакетов
крейтов
модулей
Пакеты
крейты
областью
действия
конфиденциальностью
Пути
элемент
дереве
путей
область
видимости
ключевого
слова
коллекции
списков
значений
векторами
ключей
связанными
значениями
Обработка
ошибок
Неустранимые
ошибки
Устранимые
трейты
характеристики
время
жизни
Обобщённые
разделяемого
поведения
Валидация
ссылок
сроков
Написание
автоматических
тестов
Как
писать
тесты
выполнением
Организация
Проект
вводом
выводом
командной
строки
Получение
аргументов
Чтение
файла
Рефакторинг
обеспечения
модульности
улучшения
обработки
Разработка
функциональности
библиотеки
разработки
тестирование
Работа
переменными
среды
Запись
сообщений
ошибках
вместо
Функциональные
возможности
языка
итераторы
замыкания
анонимные
которые
захватывают
своё
окружение
последовательности
элементов
итераторов
Улучшение
нашего
проекта
Сравнение
производительности
циклы
Подробнее
Настройка
билдов
профилей
выпуска
Публикация
крейта
Рабочие
области
бинарных
файлов
Расширение
возможностей
добавления
пользовательских
команд
Умные
указатели
указания
данные
куче
умными
указателями
обычными
ссылками
трейта
Выполнение
кода
очистке
умный
указатель
подсчётом
внутренняя
Ссылочные
могут
привести
утечке
памяти
Безбоязненный
параллелизм
потоков
параллельного
выполнения
Пересылка
передачи
потоками
общим
состоянием
Расширяемый
трейтов
объектно
ориентированного
ориентированных
языков
трейт
объектов
допускающих
значения
разных
типов
Реализация
шаблона
проектирования
Шаблоны
Все
места
где
использоваться
Опровержимость
может
шаблон
соответствовать
Расширенные
Небезопасный
код
Продвинутые
типажи
Макросы
Финальный
многопоточного
веб
сервера
однопоточного
Превращение
многопоточный
сервер
Мягкое
завершение
работы
очистка
Приложения
А
Ключевые
Операторы
символы
Выводимые
Полезные
инструменты
Редакции
Переводы
книги
создаётся
строках
Мы
говорили
главе
сейчас
рассмотрим
их
более
подробно
Новички
обычно
застревают
комбинации
трёх
причин
склонность
компилятора
выявлению
возможных
сложная
структура
считают
многие
программисты
Эти
факторы
объединяются
таким
образом
тема
показаться
сложной
вы
пришли
других
Полезно
обсуждать
контексте
коллекций
потому
реализованы
виде
набора
байтов
некоторые
методы
полезной
байты
интерпретируются
текст
этом
разделе
поговорим
операциях
таких
обновление
есть
каждого
типа
также
обсудим
какими
особенностями
отличается
каким
индексирование
осложняется
различием
тем
люди
компьютеры
интерпретируют
заключённые
строка
Сначала
определим
подразумеваем
термином
В
один
строковый
ядре
срез
используемый
заимствованном
срезах
строк
являются
строковые
кодировке
Например
литералы
хранятся
двоичном
файле
поэтому
срезами
предоставляемый
стандартной
библиотекой
встроен
ядро
является
расширяемым
изменяемым
владеющим
строковым
типом
говорят
они
имеют
виду
срезы
них
Хотя
этот
раздел
основном
посвящён
оба
интенсивно
используются
библиотеке
кодируются
новых
тех
операций
доступны
фактически
реализован
обёртка
вектора
некоторыми
дополнительными
гарантиями
ограничениями
возможностями
Примером
которая
одинаково
работает
функция
создающая
новый
экземпляр
показана
Листинге
Листинг
новой
пустой
Эта
создаёт
новую
пустую
строковую
переменную
именем
которую
можем
затем
загрузить
Часто
нас
начальные
хотим
назначить
строке
этого
используем
метод
доступный
любого
который
реализует
типаж
строковых
литералов
показывает
два
примера
создания
экземпляра
строкового
литерала
выражения
создают
строку
использовать
функцию
листинга
эквивалентным
коду
использует
Поскольку
очень
многих
вещей
можно
множество
предоставляющих
избыточными
занимаются
своим
делом
данном
случае
делают
одно
тоже
выбор
зависит
стиля
вам
больше
импонирует
Запомните
любые
правильно
кодированные
показано
приветствий
языках
это
допустимые
увеличиваться
размере
её
содержимое
меняться
аналогии
вставке
него
большего
количества
того
оператор
макрос
Присоединение
нарастить
используя
добавит
исходное
значение
Добавление
этих
двух
будет
содержать
принимает
всегда
владеть
входным
параметром
вариант
когда
желательно
поведение
котором
сможем
его
содержимому
переменной
содержимого
другой
стал
бы
владельцем
смогли
напечатать
последней
Однако
так
ожидали
символ
качестве
параметра
добавляет
показан
добавляющий
букву
одного
символа
результате
Объединение
оператора
макроса
хочется
объединять
две
существующие
способов
новое
Причина
недействительна
которой
использовали
ссылку
отношение
сигнатуре
вызываемого
использовании
чья
сигнатура
выглядит
примерно
увидите
определённым
использованием
обобщённых
Здесь
видим
сигнатуру
конкретными
типами
заменяющими
обобщённый
происходит
вызывается
данный
даёт
нам
ключ
понимания
особенностей
первых
означает
складываем
вторую
первой
строкой
добавить
сложить
подождите
определён
второй
параметр
почему
компилируется
вызове
заключается
том
компилятор
принудительно
аргумент
типу
вызываем
используется
принудительное
приведение
которое
превращает
забирает
прежнему
действительной
применения
операции
вторых
видеть
имеет
перемещён
вызов
действителен
вызова
смотря
то
он
скопирует
обе
инструкция
присоединяет
ней
копию
возвращает
результатом
Другими
словами
копий
данная
эффективна
копирование
нужно
объединить
несколько
становится
громоздким
переменная
множеством
символов
трудно
понять
сложного
комбинирования
устанавливает
способом
вывода
экран
содержимым
Версия
значительно
легче
читается
сгенерированный
макросом
значит
параметров
Доступ
отдельным
символам
помощи
индексу
допустимой
распространённой
операцией
менее
попытаетесь
получить
частям
индексации
получите
ошибку
неверный
Попытка
индекса
приведёт
следующей
ошибке
Ошибка
примечание
говорит
поддерживают
индексацию
ответить
вопрос
обсудить
хранит
Внутреннее
представление
оболочкой
Давайте
посмотрим
закодированных
корректным
Начнём
этой
вектор
длиной
байта
Каждая
букв
занимает
байт
кодировании
насчёт
Обратите
внимание
начинается
заглавной
кириллической
З
цифры
Отвечая
какова
длина
можете
ответ
равно
числу
необходимых
кодирования
Здравствуйте
каждое
скалярное
Следовательно
индекс
байтам
соответствовал
действительному
скалярному
значению
демонстрации
недопустимый
должно
быть
оно
значением
буквы
первый
равен
самом
деле
само
себе
действительным
символом
Возвращение
скорее
всего
хотел
пользователь
ожидает
первую
единственный
доступен
Пользователи
хотят
содержит
латинские
было
допустимым
кодом
вернул
предотвратить
возврат
непредвиденного
вызывающего
сразу
обнаружены
компилирует
такой
предотвращает
недопонимание
ранних
этапах
процесса
скалярные
кластеры
графем
Боже
мой
Ещё
момент
касающийся
существует
три
способа
рассмотрения
точки
зрения
самая
близкая
вещь
тому
назвали
буквами
посмотреть
слово
хинди
написанное
транскрипции
хранится
следующим
конечном
итоге
сохранят
эту
будут
выглядеть
шесть
четвёртый
шестой
диакритики
специальные
обозначения
смысла
сами
Наконец
получим
человек
назвал
словом
состоящем
четырёх
предоставляет
различные
способы
интерпретации
необработанных
хранят
каждой
программе
выбрать
необходимую
интерпретацию
независимо
каком
человеческом
языке
представлены
Последняя
позволяет
индексировать
получения
ожидают
индексирования
постоянное
невозможно
гарантировать
такую
производительность
понадобилось
пройтись
начала
определить
сколько
действительных
плохой
идеей
ясно
должен
возвращаемый
байтовым
кластером
срезом
просит
вас
конкретным
действительно
требуется
индексы
срезов
числового
диапазона
создании
содержится
указание
каких
надо
делать
первые
Ранее
упоминали
каждый
был
Зд
произошло
запаниковал
точно
обращались
недействительному
векторе
должны
диапазоны
осторожностью
сбою
вашей
перебора
Лучший
способ
работать
фрагментами
чётко
указать
нужны
отдельных
скалярных
Юникоде
используйте
выделяет
выполнить
итерацию
результату
доступа
каждому
элементу
напечатает
следующее
подходящим
предметной
выведет
четыре
составляющих
делая
обязательно
помните
валидные
состоять
Извлечение
кластеров
языком
сложным
функциональность
предусмотрена
доступные
нужен
функционал
просты
Подводя
итог
сложны
языки
реализуют
варианты
представить
сложность
программиста
решили
сделать
правильную
обработку
поведением
умолчанию
всех
программ
заранее
продумать
компромисс
раскрывает
большую
необходимости
обрабатывать
связанные
символами
появиться
ходе
позже
Хорошая
новость
состоит
стандартная
библиотека
предлагает
функциональных
построенных
основе
помочь
сложные
ситуации
ознакомьтесь
документацией
полезных
методов
поиска
замены
частей
переключимся
немного
сложное
