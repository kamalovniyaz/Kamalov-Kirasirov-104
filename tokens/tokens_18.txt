Ссылки
заимствование
Язык
программирования
Предисловие
Введение
чего
начать
Установка
Привет
Мир
Программирование
игры
загадки
Общие
концепции
Переменные
изменяемость
Типы
Данных
Функции
Комментарии
Управляющие
конструкции
Понимание
владения
Что
такое
владение
Тип
среза
Использование
структур
объединения
связанных
Определение
создание
экземпляров
Пример
программы
использующей
структуры
Синтаксис
метода
Перечисления
сопоставление
образцом
Конструкция
потока
управления
Лаконичный
поток
Управление
растущими
проектами
помощью
пакетов
крейтов
модулей
Пакеты
крейты
областью
действия
конфиденциальностью
Пути
элемент
дереве
путей
область
видимости
ключевого
слова
коллекции
Хранение
списков
значений
векторами
закодированного
текста
строками
ключей
связанными
значениями
Обработка
ошибок
Неустранимые
ошибки
Устранимые
трейты
характеристики
время
жизни
Обобщённые
разделяемого
поведения
Валидация
ссылок
сроков
Написание
автоматических
тестов
писать
тесты
выполнением
Организация
Проект
вводом
выводом
командной
строки
Получение
аргументов
Чтение
файла
Рефакторинг
обеспечения
модульности
улучшения
обработки
Разработка
функциональности
библиотеки
разработки
тестирование
Работа
переменными
среды
Запись
сообщений
ошибках
вместо
Функциональные
возможности
языка
итераторы
замыкания
анонимные
которые
захватывают
своё
окружение
последовательности
элементов
итераторов
Улучшение
нашего
проекта
Сравнение
производительности
циклы
Подробнее
Настройка
билдов
профилей
выпуска
Публикация
крейта
Рабочие
области
бинарных
файлов
Расширение
возможностей
добавления
пользовательских
команд
Умные
указатели
указания
данные
куче
умными
указателями
обычными
ссылками
трейта
Выполнение
кода
очистке
умный
указатель
подсчётом
внутренняя
Ссылочные
могут
привести
утечке
памяти
Безбоязненный
параллелизм
потоков
параллельного
выполнения
Пересылка
передачи
потоками
общим
состоянием
Расширяемый
трейтов
объектно
ориентированного
ориентированных
языков
трейт
объектов
допускающих
значения
разных
типов
Реализация
шаблона
проектирования
Шаблоны
Все
места
где
использоваться
Опровержимость
может
шаблон
соответствовать
Расширенные
Небезопасный
код
Продвинутые
типажи
Макросы
Финальный
многопоточного
веб
сервера
однопоточного
Превращение
многопоточный
сервер
Мягкое
завершение
работы
очистка
Приложения
Ключевые
Операторы
символы
Выводимые
Полезные
инструменты
Редакции
Переводы
книги
создаётся
Проблема
кодом
кортежа
листинге
заключается
том
мы
должны
вернуть
вызванной
использовать
вызова
потому
была
перемещена
этого
можем
предоставить
ссылку
значение
Ссылка
похожа
смысле
это
адрес
которому
проследовать
получить
доступ
данным
хранящимся
этому
адресу
эти
принадлежат
какой
другой
переменной
отличие
указателя
гарантированно
указывает
допустимое
определённого
типа
течение
всего
срока
существования
этой
вы
могли
определить
функцию
имеющую
объект
качестве
параметра
того
брать
себя
ответственность
Файл
первых
обратите
внимание
весь
объявлении
возвращаемое
исчезли
вторых
передаём
его
определении
используем
амперсанды
представляют
собой
они
позволяют
вам
ссылаться
некоторое
принимая
ним
Рисунок
изображает
эту
концепцию
диаграмма
указывающей
Примечание
противоположностью
использованием
является
разыменование
выполняемое
оператора
разыменования
увидим
некоторые
варианты
использования
главе
обсудим
детали
Давайте
рассмотрим
механизм
позволяет
нам
создать
которая
ссылается
владеет
им
она
которое
будет
удалено
когда
перестанет
Сигнатура
использует
индикации
ссылкой
Добавим
объясняющие
такая
любого
удаляется
перестаёт
владельцем
имеют
параметров
фактических
нужно
возвращать
право
никогда
владели
ими
называем
процесс
создания
заимствованием
реальной
человек
то
можете
него
позаимствовать
закончите
законному
владельцу
произойдёт
попытаться
изменить
было
позаимствовано
Попробуйте
листинга
Спойлер
этот
сработает
Листинг
попытка
модификации
заимствованной
ошибка
неизменяемы
умолчанию
так
разрешено
изменять
нас
есть
Изменяемые
исправить
позволить
себе
заимствованное
нескольких
небольших
настроек
используют
изменяемую
Сначала
меняем
Затем
создаём
которой
вызываем
обновляем
сигнатуру
принять
даёт
понять
изменит
заимствует
одно
большое
ограничение
вас
изменяемая
быть
других
который
пытается
две
завершится
ошибкой
Описание
Эта
говорит
недействителен
заимствовать
более
одного
раза
один
момент
Первое
изменяемое
находится
должно
длиться
тех
пор
оно
использовано
созданием
изменяемой
её
попытались
другую
те
предотвращающее
одновременное
изменяемых
одни
допускает
изменение
очень
контролируемым
образом
чем
борются
новые
большинство
любой
Преимущество
ограничения
предотвратить
гонку
компиляции
Гонка
состояние
гонки
происходит
возникают
следующие
три
сценария
Два
больше
указателей
Минимум
используется
записи
Отсутствуют
механизмы
синхронизации
доступа
вызывают
неопределённое
поведение
их
сложно
диагностировать
пытаетесь
отследить
предотвращает
такую
проблему
отказываясь
компилировать
гонками
всегда
фигурные
скобки
новой
позволяющей
несколько
одновременно
применяет
аналогичное
правило
комбинирования
неизменяемых
приводит
ошибке
Вау
также
пока
неизменяемая
Пользователи
неизменяемой
ожидают
внезапно
изменится
них
Однако
разрешены
множественные
неизменяемые
никто
кто
читает
повлиять
кем
ещё
начинается
введена
продолжается
последнего
Например
компилироваться
последнее
вводится
заканчиваются
использовались
последний
раз
перекрываются
поэтому
разрешён
компилятор
сказать
точке
концом
Несмотря
заимствования
иногда
вызывать
разочарование
заранее
потенциальную
ошибку
точно
показывает
Тогда
придётся
выяснять
почему
ваши
оказались
такими
ожидали
Висячие
языках
весьма
легко
ошибочно
недействительную
висячую
указывающую
участок
мог
передан
кому
другому
путём
освобождения
некоторой
сохранении
память
гарантирует
станут
недействительными
какие
обеспечит
выйдут
прежде
исчезнет
попробуем
увидеть
появление
Здесь
сообщение
относится
особенности
которую
рассмотрели
времени
подробно
времена
обращаете
внимания
части
касающиеся
содержать
ключ
тому
проблемой
каждом
этапе
внутри
завершён
освобождена
неё
означает
указывать
недопустимую
нехорошо
позволит
сделать
Решением
непосредственно
работает
проблем
перемещено
ничего
освобождено
Правила
повторим
обсудили
одна
обе
любое
количество
действительными
следующей
срезы
