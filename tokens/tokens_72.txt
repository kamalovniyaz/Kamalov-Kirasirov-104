умный
указатель
подсчётом
ссылок
Язык
программирования
Предисловие
Введение
чего
начать
Установка
Привет
Мир
Программирование
игры
загадки
Общие
концепции
Переменные
изменяемость
Типы
Данных
Функции
Комментарии
Управляющие
конструкции
Понимание
владения
Что
такое
владение
Ссылки
заимствование
Тип
среза
Использование
структур
объединения
связанных
Определение
создание
экземпляров
Пример
программы
использующей
структуры
Синтаксис
метода
Перечисления
сопоставление
образцом
Конструкция
потока
управления
Лаконичный
поток
Управление
растущими
проектами
помощью
пакетов
крейтов
модулей
Пакеты
крейты
областью
действия
конфиденциальностью
Пути
элемент
дереве
путей
область
видимости
ключевого
слова
коллекции
Хранение
списков
значений
векторами
закодированного
текста
строками
ключей
связанными
значениями
Обработка
ошибок
Неустранимые
ошибки
Устранимые
трейты
характеристики
время
жизни
Обобщённые
разделяемого
поведения
Валидация
сроков
Написание
автоматических
тестов
писать
тесты
выполнением
Организация
Проект
вводом
выводом
командной
строки
Получение
аргументов
Чтение
файла
Рефакторинг
обеспечения
модульности
улучшения
обработки
Разработка
функциональности
библиотеки
разработки
тестирование
Работа
переменными
среды
Запись
сообщений
ошибках
вместо
Функциональные
возможности
языка
итераторы
замыкания
анонимные
которые
захватывают
своё
окружение
последовательности
элементов
итераторов
Улучшение
нашего
проекта
Сравнение
производительности
циклы
Подробнее
Настройка
билдов
профилей
выпуска
Публикация
крейта
Рабочие
области
бинарных
файлов
Расширение
возможностей
добавления
пользовательских
команд
Умные
указатели
указания
данные
куче
умными
указателями
обычными
ссылками
трейта
Выполнение
кода
очистке
внутренняя
Ссылочные
могут
привести
утечке
памяти
Безбоязненный
параллелизм
потоков
параллельного
выполнения
Пересылка
передачи
потоками
общим
состоянием
Расширяемый
трейтов
объектно
ориентированного
ориентированных
языков
трейт
объектов
допускающих
значения
разных
типов
Реализация
шаблона
проектирования
Шаблоны
Все
места
где
использоваться
Опровержимость
может
шаблон
соответствовать
Расширенные
Небезопасный
код
Продвинутые
типажи
Макросы
Финальный
многопоточного
веб
сервера
однопоточного
Превращение
многопоточный
сервер
Мягкое
завершение
работы
очистка
Приложения
Ключевые
Операторы
символы
Выводимые
Полезные
инструменты
Редакции
Переводы
книги
создаётся
большинстве
ситуаций
является
однозначным
вы
точно
знаете
какая
переменная
владеет
данным
значением
Однако
бывают
случаи
одного
быть
несколько
владельцев
Например
Графовых
структурах
рёбер
указывающих
один
тот
узел
таким
образом
этот
становится
фактически
собственностью
всех
этих
подлежит
удалению
исключением
тех
случаев
него
указывает
одно
ребро
соответственно
нет
должны
включить
множественное
явно
используя
который
аббревиатурой
подсчёта
отслеживает
количество
значение
определить
используется
оно
ещё
очищено
этом
одна
ссылка
станет
недействительной
Представьте
себе
телевизор
гостиной
Когда
человек
входит
смотреть
он
включает
его
Другие
войти
комнату
посмотреть
последний
покидает
выключает
потому
больше
кто
то
выключит
просмотра
другими
оставшиеся
телезрители
устроят
шум
мы
хотим
разместить
некоторые
чтения
несколькими
частями
нашей
можем
компиляции
частей
завершит
последней
знали
часть
могли
сделать
эту
владельцем
вступили
силу
обычные
правила
применяемые
Обратите
внимание
однопоточных
сценариях
обсудим
конкурентность
главе
рассмотрим
выполнять
подсчёт
многопоточных
программах
совместного
использования
Давайте
вернёмся
нашему
примеру
списком
листинге
Напомним
определили
типа
раз
создадим
два
списка
оба
которых
будут
владеть
третьим
Концептуально
это
похоже
рисунок
делят
список
содержащий
затем
начинающийся
продолжать
первый
словами
разделять
Попытка
реализовать
сценарий
типом
будет
работать
показано
Файл
Листинг
Демонстрация
того
нельзя
иметь
использующих
пытаются
совместно
этого
получаем
ошибку
Варианты
владеют
данными
они
содержат
поэтому
создаём
перемещается
пытаемся
использовать
снова
создании
нам
разрешают
был
перемещён
изменить
хранить
тогда
пришлось
указывать
параметры
времени
Указывая
указали
каждый
списке
жить
минимум
столько
сколько
весь
относится
элементам
спискам
изменим
наше
так
вариант
теперь
содержать
указывающий
стал
будем
клонировать
содержит
тем
самым
увеличивая
единицы
двойки
позволяя
переменным
типе
также
клонируем
двух
трёх
вызываем
счётчик
внутри
увеличиваться
очищены
них
нулевых
использующее
нужно
добавить
инструкцию
подключить
автоматического
импорта
прелюдии
владеющий
сохраняем
новом
переменной
называем
функцию
передаём
ей
ссылку
аргумент
вызвать
принято
таком
случае
делает
глубокого
копирования
происходит
типах
большинства
реализаций
Вызов
увеличивает
занимает
много
Глубокое
копирование
занимать
можно
визуально
различать
виды
клонирования
глубоким
копированием
увеличивают
поиске
коде
проблем
производительностью
рассмотреть
клонирование
игнорировать
вызовы
рабочий
увидеть
изменяется
число
удалении
она
имела
внутреннюю
сможем
меняется
выходе
внутренней
Печать
количества
каждой
части
выводим
которое
вызывая
Эта
функция
названа
имеет
увидим
разделе
Предотвращение
циклических
выводит
консоль
начальный
равный
вызове
увеличивается
выходит
уменьшается
вызывать
уменьшения
счётчика
увеличения
автоматически
уменьшает
примере
наблюдаем
выходят
конце
равным
полностью
очищается
позволяет
одному
значению
гарантирует
остаётся
действительным
пор
любой
существует
неизменяемых
обмениваться
вашей
позволял
изменяемых
нарушить
правил
заимствования
описанных
множественные
изменяемые
одном
том
месте
гонки
несогласованность
возможность
изменять
очень
полезна
следующем
изменчивости
вместе
этим
ограничением
