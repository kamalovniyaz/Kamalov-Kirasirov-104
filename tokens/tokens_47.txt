Как
писать
тесты
Язык
программирования
Предисловие
Введение
чего
начать
Установка
Привет
Мир
Программирование
игры
загадки
Общие
концепции
Переменные
изменяемость
Типы
Данных
Функции
Комментарии
Управляющие
конструкции
Понимание
владения
Что
такое
владение
Ссылки
заимствование
Тип
среза
Использование
структур
объединения
связанных
Определение
создание
экземпляров
Пример
программы
использующей
структуры
Синтаксис
метода
Перечисления
сопоставление
образцом
Конструкция
потока
управления
Лаконичный
поток
Управление
растущими
проектами
помощью
пакетов
крейтов
модулей
Пакеты
крейты
областью
действия
конфиденциальностью
Пути
элемент
дереве
путей
область
видимости
ключевого
слова
коллекции
Хранение
списков
значений
векторами
закодированного
текста
строками
ключей
связанными
значениями
Обработка
ошибок
Неустранимые
ошибки
Устранимые
трейты
характеристики
время
жизни
Обобщённые
разделяемого
поведения
Валидация
ссылок
сроков
Написание
автоматических
тестов
выполнением
Организация
Проект
вводом
выводом
командной
строки
Получение
аргументов
Чтение
файла
Рефакторинг
обеспечения
модульности
улучшения
обработки
Разработка
функциональности
библиотеки
разработки
тестирование
Работа
переменными
среды
Запись
сообщений
ошибках
вместо
Функциональные
возможности
языка
итераторы
замыкания
анонимные
которые
захватывают
своё
окружение
последовательности
элементов
итераторов
Улучшение
нашего
проекта
Сравнение
производительности
циклы
Подробнее
Настройка
билдов
профилей
выпуска
Публикация
крейта
Рабочие
области
бинарных
файлов
Расширение
возможностей
добавления
пользовательских
команд
Умные
указатели
указания
данные
куче
умными
указателями
обычными
ссылками
трейта
Выполнение
кода
очистке
умный
указатель
подсчётом
внутренняя
Ссылочные
могут
привести
утечке
памяти
Безбоязненный
параллелизм
потоков
параллельного
выполнения
Пересылка
передачи
потоками
общим
состоянием
Расширяемый
трейтов
объектно
ориентированного
ориентированных
языков
трейт
объектов
допускающих
значения
разных
типов
Реализация
шаблона
проектирования
Шаблоны
Все
места
где
использоваться
Опровержимость
может
шаблон
соответствовать
Расширенные
Небезопасный
код
Продвинутые
типажи
Макросы
Финальный
многопоточного
веб
сервера
однопоточного
Превращение
многопоточный
сервер
Мягкое
завершение
работы
очистка
Приложения
А
Ключевые
Операторы
символы
Выводимые
Полезные
инструменты
Редакции
Переводы
книги
создаётся
это
проверяют
тестовый
работает
ожидаемым
образом
Содержимое
тестовых
функций
обычно
выполняет
следующие
три
любых
необходимых
состояния
Запуск
который
вы
хотите
проверить
Утверждение
результаты
являются
теми
ожидаете
Давайте
рассмотрим
предоставляемые
специально
написания
выполнят
эти
включая
атрибут
несколько
макросов
Структура
тестирующей
простейшем
случае
тест
функция
аннотированная
атрибутом
Атрибуты
представляют
собой
метаданные
фрагментах
один
примеров
мы
использовали
структурами
главе
Чтобы
превратить
функцию
тестирующую
добавьте
строку
запускаете
командой
создаёт
бинарный
модуль
выполняющий
аннотированные
сообщающий
том
успешно
прошла
каждая
тестирующая
создаём
новый
нём
автоматически
генерируется
функцией
нас
Этот
даст
вам
ваших
так
нужно
искать
точную
структуру
каждый
раз
начинаете
можете
добавить
столько
дополнительных
захотите
исследуем
некоторые
аспекты
экспериментируя
шаблонным
тестом
сгенерированным
реального
тестирования
любого
Затем
напишем
реальные
вызывают
некоторый
написанный
убедимся
его
правильном
поведении
поэкспериментируем
прежде
приступать
фактическому
тестированию
реальных
нами
поведение
правильное
создадим
библиотечный
названием
складывает
два
числа
вашей
должно
выглядеть
листинге
Файл
Листинг
сгенерированные
Сейчас
проигнорируем
первые
две
строчки
сосредоточимся
Обратите
внимание
аннотации
указывает
тестовая
поэтому
запускающий
знает
эту
следует
рассматривать
тестовую
также
быть
тестируемые
модуле
помогут
настроить
сценарии
выполнить
операции
нам
всегда
указывать
какие
тестами
теле
теста
используется
макрос
утверждать
содержит
результат
сложения
равен
служит
примером
формата
типичного
запустим
убедиться
пройден
Команда
выполнит
выбранном
проекте
сообщит
результатах
Вывод
информации
работе
сгенерированных
скомпилировал
выполнил
видим
Следующая
строка
показывает
имя
сгенерированной
тестовой
называемой
запуска
этого
равный
Текст
означает
пройдены
часть
вывода
сообщает
общее
количество
прошли
были
ошибочными
Можно
пометить
игнорируемый
он
выполнялся
конкретном
разделе
Игнорирование
некоторых
их
запрашивать
позже
этой
Поскольку
данный
момент
сделали
сводке
показано
можем
передать
аргумент
команде
тех
которых
соответствует
строке
называется
фильтрацией
подмножества
имени
фильтровали
выполняемые
конце
сводки
Статистика
предназначена
статьи
такие
доступны
ночной
сборке
Посмотрите
документацию
тестах
узнать
больше
начинается
информация
документации
пока
нет
компилировать
любые
примеры
находятся
Такая
возможность
помогает
поддерживать
синхронизированном
состоянии
поговорим
написании
секции
Главы
начнём
настраивать
соответствии
нашими
собственными
потребностями
Сначала
поменяем
название
Снова
выполним
команду
наименование
нашей
Добавим
ещё
сделаем
отработал
терпит
неудачу
паникует
тестируемой
запускается
новом
потоке
когда
главный
видит
упал
помечает
завершившийся
аварийно
говорили
способе
вызвать
панику
используя
известный
Введём
файле
листинга
Добавление
второго
завершится
ошибкой
потому
вызываем
результатов
показан
другой
новые
появились
отдельными
результатами
сводкой
первом
отображается
подробная
причина
каждого
сбоя
данном
сработал
произошло
следующем
перечисляют
имена
всех
пройденных
удобно
есть
много
подробных
неудачных
использовать
пройденного
дальнейшей
отладки
способах
Контролирование
хода
Итоговая
общий
завершён
Теперь
увидели
выглядят
сценариях
другие
Проверка
макроса
доступен
стандартной
является
удобным
некоторое
условие
тесте
вычисляется
значение
передаём
логическое
оно
то
ничего
происходит
считается
пройденным
Если
вызывает
сбой
функционирует
ожидалось
метод
повторён
поместим
него
её
возвращает
идеальным
вариантом
использования
макросе
пишем
путём
создания
экземпляра
шириной
высотой
убеждаемся
содержать
экземпляр
имеющий
ширину
высоту
проверяет
больший
прямоугольник
действительно
меньший
новую
добавленную
обычным
подчиняется
тем
правилам
обсуждали
элементы
дерева
модуля
внутренним
подключить
тестируемый
внешнего
внутреннего
глобальное
подключение
определено
внешнем
становится
доступным
назвали
наш
создали
нужных
вызвали
передали
вызова
выражение
возвращать
должен
пройти
выясним
проходит
попытаемся
правильный
этом
должны
инвертировать
передадим
макро
пройдёт
вернёт
работают
проверим
отреагируют
ошибку
изменим
реализацию
заменив
одно
логических
выражений
знак
сравнения
противоположный
меньше
сравнении
ширины
производит
следующее
Наши
нашли
равно
методе
число
равенство
способом
проверки
результата
тестируемого
ожидаемого
равенстве
передавая
ему
использованием
оператора
Важно
знать
стандартная
библиотека
предлагает
пару
сделать
более
сравнивают
аргумента
неравенство
соответственно
печатают
входных
параметров
завершился
позволяет
легче
увидеть
почему
ошибочен
Противоположно
этому
отобразить
вычислил
выражения
привели
результату
которая
прибавляет
входному
параметру
протестируем
проходят
Первый
чей
она
выглядит
использует
завершается
Измените
добавлять
Попробуем
нашёл
выполнился
сообщение
было
полезно
отладку
имел
был
значением
языках
таких
библиотеках
принято
именовать
входные
параметры
проверочных
ожидаемое
фактическое
приняты
обозначения
порядок
котором
определяются
производимое
тестируемым
кодом
имеют
могли
бы
написать
приведёт
отображаемому
сообщению
ошибке
слева
справа
сработает
равны
друг
другу
наиболее
полезен
случаях
знаем
заранее
каким
будет
точно
примеру
тестируется
гарантировано
изменяет
определённым
способ
изменения
входного
параметра
зависит
дня
недели
запускаются
лучший
правильность
такой
сравнить
выходное
равным
значению
своей
неявным
используют
срабатывает
отладочного
форматирования
сравниваемых
реализовать
примитивные
большая
реализуют
перечислений
реализуете
сами
необходимо
типаж
печати
отладочной
виде
консоли
оба
типажа
выводимыми
типажами
упоминалось
добавив
аннотацию
определению
Смотрите
деталей
пользовательское
дополнительный
сообщении
аргументы
указанные
обязательных
далее
передаются
обсуждается
Конкатенация
форматированную
заполнителей
заменяющие
заполнители
Пользовательские
сообщения
полезны
пояснения
того
неудачей
вас
лучшее
представление
чем
проблема
Например
приветствует
человека
хотим
протестировать
передаваемое
ей
выводилось
консоль
Требования
программе
согласованы
вполне
уверены
начале
приветствия
изменится
решили
обновлять
изменении
требований
точное
возвращённым
будем
проверять
внесём
изменив
включало
увидим
выводит
информацию
успешным
какой
полезный
выводились
форматированное
строкой
заменителем
фактическими
данными
получим
подробное
которое
самом
деле
получили
тестовом
выводе
поможет
отлаживать
произошедшее
ожидали
В
дополнение
проверке
правильные
ожидаемые
важным
обрабатывает
ожидаем
гарантии
экземпляры
будут
гарантирует
попытка
создать
диапазона
Реализуем
другого
атрибута
системе
генерирует
ошибка
условия
произойдут
вызовет
объявления
Посмотрим
хорошо
убрав
паниковать
потерпит
получаем
очень
полезное
смотрим
Аварийное
вызвал
паники
неточными
они
указывают
причине
отличной
той
которую
точными
необязательный
параметр
детализация
позволит
удостовериться
предоставленный
модифицированный
различными
сообщениями
зависимости
слишком
маленьким
большим
наличие
указанной
подстроки
поместили
подстрокой
которым
указать
полное
выберите
какая
панике
уникальна
динамична
насколько
ваш
точным
достаточно
гарантировать
неуспешно
сообщением
поменяв
местами
блоки
включено
ожидаемую
выяснение
написали
паникуют
терпят
переписанный
возвращающий
имеет
возвращаемый
возвращаем
выполнен
внутри
возвращали
оператор
вопросительный
выполниться
операция
них
вариант
использующих
используйте
вопросительного
знака
знаете
способов
взглянем
запуске
разные
опции
используемые
