Определение
Язык
программирования
Предисловие
Введение
чего
начать
Установка
Привет
Мир
Программирование
игры
загадки
Общие
концепции
Переменные
изменяемость
Типы
Данных
Функции
Комментарии
Управляющие
конструкции
Понимание
владения
Что
такое
владение
Ссылки
заимствование
Тип
среза
Использование
структур
объединения
связанных
создание
экземпляров
Пример
программы
использующей
структуры
Синтаксис
метода
Перечисления
сопоставление
образцом
Конструкция
потока
управления
Лаконичный
поток
Управление
растущими
проектами
помощью
пакетов
крейтов
модулей
Пакеты
крейты
областью
действия
конфиденциальностью
Пути
элемент
дереве
путей
область
видимости
ключевого
слова
коллекции
Хранение
списков
значений
векторами
закодированного
текста
строками
ключей
связанными
значениями
Обработка
ошибок
Неустранимые
ошибки
Устранимые
трейты
характеристики
время
жизни
Обобщённые
разделяемого
поведения
Валидация
ссылок
сроков
Написание
автоматических
тестов
Как
писать
тесты
выполнением
Организация
Проект
вводом
выводом
командной
строки
Получение
аргументов
Чтение
файла
Рефакторинг
обеспечения
модульности
улучшения
обработки
Разработка
функциональности
библиотеки
разработки
тестирование
Работа
переменными
среды
Запись
сообщений
ошибках
вместо
Функциональные
возможности
языка
итераторы
замыкания
анонимные
которые
захватывают
своё
окружение
последовательности
элементов
итераторов
Улучшение
нашего
проекта
Сравнение
производительности
циклы
Подробнее
Настройка
билдов
профилей
выпуска
Публикация
крейта
Рабочие
области
бинарных
файлов
Расширение
возможностей
добавления
пользовательских
команд
Умные
указатели
указания
данные
куче
умными
указателями
обычными
ссылками
трейта
Выполнение
кода
очистке
умный
указатель
подсчётом
внутренняя
Ссылочные
могут
привести
утечке
памяти
Безбоязненный
параллелизм
потоков
параллельного
выполнения
Пересылка
передачи
потоками
общим
состоянием
Расширяемый
трейтов
объектно
ориентированного
ориентированных
языков
трейт
объектов
допускающих
значения
разных
типов
Реализация
шаблона
проектирования
Шаблоны
Все
места
где
использоваться
Опровержимость
может
шаблон
соответствовать
Расширенные
Небезопасный
код
Продвинутые
типажи
Макросы
Финальный
многопоточного
веб
сервера
однопоточного
Превращение
многопоточный
сервер
Мягкое
завершение
работы
очистка
Приложения
А
Ключевые
Операторы
символы
Выводимые
Полезные
инструменты
Редакции
Переводы
книги
создаётся
Там
дают
вам
возможность
группировать
связанные
поля
например
его
способ
сказать
значение
является
одним
возможных
наборов
мы
можем
захотеть
это
одна
множества
фигур
которую
также
входят
этого
позволяет
нам
закодировать
эти
виде
Давайте
рассмотрим
ситуацию
могли
бы
отразить
коде
поймём
почему
полезны
более
уместны
этом
случае
Допустим
нужно
работать
адресами
настоящее
обозначения
адресов
используются
два
основных
стандарта
четвёртая
шестая
версии
Поскольку
возможные
варианты
которыми
столкнуться
наша
программа
перечислить
откуда
перечисление
получило
название
Любой
адрес
быть
четвёртой
шестой
обеими
одновременно
Эта
особенность
делает
структуру
подходящей
представлять
собой
один
вариантов
Адреса
так
своей
сути
равно
являются
поэтому
их
следует
рассматривать
тот
обрабатываются
задачи
относящиеся
любому
типу
Можно
выразить
эту
концепцию
определив
составив
список
видов
Вот
перечислений
теперь
пользовательским
типом
который
использовать
другом
месте
Экземпляры
каждого
варианта
создать
следующим
образом
Обратите
внимание
находятся
пространстве
имён
вместе
идентификатором
обособления
используем
двойное
двоеточие
удобно
тем
оба
относятся
одному
Затем
определить
функцию
которая
принимает
вызвать
любым
получить
ещё
больше
преимуществ
подумать
нашем
типе
то
выяснится
данный
момент
нас
нет
хранить
собственно
сам
будем
знать
Учитывая
недавно
главе
вы
узнали
структурах
вас
возникнуть
соблазн
решить
проблему
показано
листинге
Листинг
Сохранение
использованием
Здесь
определили
которой
есть
которое
ранее
типа
У
экземпляра
этой
Первый
качестве
соответствующим
адресом
Второй
экземпляр
Он
имеет
другой
вариант
ним
ассоциирован
использовали
таким
формата
значением
Однако
представление
лаконично
того
помещать
поместить
непосредственно
новое
гласит
будут
иметь
соответствующие
прикрепляем
каждому
варианту
напрямую
необходимости
дополнительной
структуре
легче
увидеть
одну
деталь
работают
имя
определяем
становится
функцией
создаёт
вызов
возвращает
автоматически
получаем
конструктор
определяемую
результате
определения
одно
преимущество
использования
заключается
том
каждый
разное
количество
ассоциированных
представленных
типах
Версия
всегда
будет
содержать
четыре
цифровых
компонента
сохранить
описать
единственное
смогли
решают
задачу
легко
показали
несколько
различных
способов
хранения
версий
оказалось
желание
указывать
настолько
распространено
стандартной
библиотеке
посмотрим
стандартная
библиотека
определяет
ней
точно
вариантами
она
помещает
адресе
этих
двух
имеют
различные
Этот
иллюстрирует
добавлять
строку
число
пр
можете
включить
другие
Стандартные
очень
сложны
потенциально
сложными
вложенность
глубокой
объявлять
свою
собственную
реализацию
аналогичным
названием
каких
конфликтов
потому
добавили
поговорим
примере
свой
особый
внутри
каждом
которого
хранятся
разные
количества
элемента
пустой
именованные
структура
единственной
строкой
кортеж
трёх
такими
похоже
исключением
использует
ключевое
слово
сгруппированы
Следующие
те
предыдущие
каждая
которых
свои
собственные
определять
принимают
любые
сделать
объявленного
единым
сходство
перечислениями
структурами
методы
блока
именем
перечислении
теле
получения
объекта
вызвали
метод
создали
переменную
содержащую
выполнении
другое
наиболее
часто
используемое
распространённым
полезным
преимущества
разделе
рассматривается
одного
определённого
кодирует
распространённый
сценарий
котором
ничем
запросите
непустого
списка
получите
пустого
ничего
Выражение
терминах
системы
означает
компилятор
проверить
обработали
случаи
должны
были
обработать
функциональность
предотвратить
чрезвычайно
распространены
других
языках
Дизайн
точки
зрения
какие
включаете
него
исключаете
важны
такого
функционала
многих
находиться
одном
состояний
презентации
года
ошибка
миллиард
долларов
Тони
Хоар
изобретатель
сказал
следующее
Я
называю
ошибкой
разрабатывал
первую
комплексную
систему
ориентированном
языке
Моя
цель
состояла
гарантировать
любое
должно
абсолютно
безопасным
автоматической
проверкой
компилятором
мог
устоять
соблазном
вставить
пустую
ссылку
было
реализовать
привело
бесчисленным
ошибкам
уязвимостям
системным
сбоям
вероятно
причинили
боль
ущерб
последние
сорок
лет
Проблема
попытаетесь
ошибку
рода
свойство
повсеместно
такую
менее
концепция
пытается
полезной
какой
причине
недействительно
отсутствует
самом
деле
конкретной
реализации
присутствия
отсутствия
оно
определено
библиотекой
полезно
включено
прелюдию
явно
вводить
включены
префикса
всём
обычным
перечислением
представляют
говорили
параметр
обобщённого
подробно
всё
фрагмент
любого
конкретный
используется
общий
другим
примеров
числовых
строковых
вывести
указали
требует
аннотировали
глядя
сообщаем
должен
Когда
знаем
присутствует
содержится
самое
некотором
смысле
действительного
наличие
лучше
Вкратце
разным
типам
позволит
определённо
допустимым
компилироваться
добавить
значению
запустим
получим
сообщение
ошибке
Сильно
Фактически
понимает
сложить
гарантирует
допустимое
уверенно
продолжать
работу
проверяя
упакованное
беспокоиться
возможно
вариантом
позаботится
такой
случай
прежде
попытались
Другими
словами
преобразовать
чем
сможете
выполнять
операции
этим
правило
помогает
выявить
распространённых
проблем
предполагая
Устранение
риска
ошибочного
предположения
касательно
уверенным
своём
используете
обязаны
обрабатывать
Везде
отличный
смело
рассчитывать
продуманное
проектное
решение
ограничивающее
распространение
увеличивающее
безопасность
Итак
руках
объект
вообще
большое
методов
полезных
ситуациях
ознакомиться
ними
документации
Знакомство
методами
вашем
путешествии
В
общем
нужен
понадобится
некоторый
тогда
этому
коду
разрешено
доступного
потоком
работе
запускает
разный
зависимости
имеется
находящиеся
совпавшего
