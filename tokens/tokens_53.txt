Рефакторинг
обеспечения
модульности
улучшения
обработки
ошибок
Язык
программирования
Предисловие
Введение
чего
начать
Установка
Привет
Мир
Программирование
игры
загадки
Общие
концепции
Переменные
изменяемость
Типы
Данных
Функции
Комментарии
Управляющие
конструкции
Понимание
владения
Что
такое
владение
Ссылки
заимствование
Тип
среза
Использование
структур
объединения
связанных
Определение
создание
экземпляров
Пример
программы
использующей
структуры
Синтаксис
метода
Перечисления
сопоставление
образцом
Конструкция
потока
управления
Лаконичный
поток
Управление
растущими
проектами
помощью
пакетов
крейтов
модулей
Пакеты
крейты
областью
действия
конфиденциальностью
Пути
элемент
дереве
путей
область
видимости
ключевого
слова
коллекции
Хранение
списков
значений
векторами
закодированного
текста
строками
ключей
связанными
значениями
Обработка
Неустранимые
ошибки
Устранимые
трейты
характеристики
время
жизни
Обобщённые
разделяемого
поведения
Валидация
ссылок
сроков
Написание
автоматических
тестов
писать
тесты
выполнением
Организация
Проект
вводом
выводом
командной
строки
Получение
аргументов
Чтение
файла
Разработка
функциональности
библиотеки
разработки
тестирование
Работа
переменными
среды
Запись
сообщений
ошибках
вместо
Функциональные
возможности
языка
итераторы
замыкания
анонимные
которые
захватывают
своё
окружение
последовательности
элементов
итераторов
Улучшение
нашего
проекта
Сравнение
производительности
циклы
Подробнее
Настройка
билдов
профилей
выпуска
Публикация
крейта
Рабочие
области
бинарных
файлов
Расширение
возможностей
добавления
пользовательских
команд
Умные
указатели
указания
данные
куче
умными
указателями
обычными
ссылками
трейта
Выполнение
кода
очистке
умный
указатель
подсчётом
внутренняя
Ссылочные
могут
привести
утечке
памяти
Безбоязненный
параллелизм
потоков
параллельного
выполнения
Пересылка
передачи
потоками
общим
состоянием
Расширяемый
трейтов
объектно
ориентированного
ориентированных
языков
трейт
объектов
допускающих
значения
разных
типов
Реализация
шаблона
проектирования
Шаблоны
Все
места
где
использоваться
Опровержимость
может
шаблон
соответствовать
Расширенные
Небезопасный
код
Продвинутые
типажи
Макросы
Финальный
многопоточного
веб
сервера
однопоточного
Превращение
многопоточный
сервер
Мягкое
завершение
работы
очистка
Приложения
Ключевые
Операторы
символы
Выводимые
Полезные
инструменты
Редакции
Переводы
книги
создаётся
мы
исправим
имеющихся
проблемы
структурой
тем
обрабатываются
потенциальные
первых
функция
данный
момент
решает
две
задачи
анализирует
читает
файлы
мере
роста
количество
отдельных
задач
обрабатывает
будет
увеличиваться
эта
получает
больше
обязанностей
то
становится
труднее
понимать
её
тестировать
изменять
сломав
одну
частей
Лучше
всего
разделить
функциональность
каждая
отвечала
задачу
проблема
также
связана
второй
проблемой
являются
конфигурации
нашей
типа
используются
логики
длиннее
переменных
нам
нужно
добавить
нас
сложнее
отслеживать
назначение
каждой
переменной
сгруппировать
структуру
сделать
их
понятным
Третья
заключается
том
используем
вывода
информации
ошибке
проблеме
чтением
сообщение
выведет
текст
сработать
разным
причинам
например
файл
найден
быть
разрешения
его
Сейчас
независимо
ситуации
напечатаем
одно
даст
пользователю
никакой
четвёртых
неоднократно
различных
пользователь
запускает
нашу
программу
достаточного
количества
он
получит
ошибку
совсем
понятно
описывает
проблему
Было
весь
находился
одном
месте
кто
поддерживать
наш
дальнейшем
вносить
изменения
здесь
потребуется
изменить
логику
Наличие
гарантирует
сообщения
будут
иметь
смысл
наших
конечных
пользователей
Давайте
решим
эти
четыре
путём
рефакторинга
Разделение
ответственности
проектов
Организационная
распределения
нескольких
является
общей
многих
результате
сообщество
разработало
процесс
использования
качестве
руководства
разделению
бинарной
начинает
имеет
следующие
шаги
Разделите
два
Перенесите
всю
Пока
ваша
логика
синтаксического
анализа
мала
она
оставаться
файле
сложной
извлеките
переместите
обязанности
остаются
этого
процесса
должно
ограничено
следующим
Вызов
разбора
любой
другой
возвращает
Этот
разделении
занимается
запуском
Поскольку
нельзя
проверить
функцию
напрямую
такая
структура
позволяет
перемещения
внутри
Единственный
который
остаётся
достаточно
маленьким
корректность
прочитав
переработаем
следуя
этому
процессу
Извлечение
парсера
извлечём
которую
вызовет
подготовки
перемещению
Листинг
показывает
новый
запуск
вызывает
новую
определим
сначала
Выделение
ещё
собираем
аргументы
вектор
присваивания
значение
аргумента
индексом
именем
передаём
затем
содержит
которая
определяет
какой
аргумент
идёт
какую
переменную
передаёт
обратно
создаём
несёт
соответствия
соответствующей
доработка
показаться
излишней
маленькой
проводим
небольшими
постепенными
шагами
внесения
снова
запустите
убедитесь
анализ
работает
хорошо
часто
проверять
прогресс
помочь
определить
причину
проблем
они
возникают
Группировка
конфигурационных
можем
один
маленький
шаг
возвращаем
кортеж
немедленно
разделяем
отдельные
части
Это
признак
того
возможно
нет
правильной
абстракции
индикатор
есть
место
часть
подразумевает
связаны
друг
другом
оба
частью
одного
конфигурационного
настоящее
отражаем
смысла
структуре
группировки
двух
могли
поместить
дать
каждому
полей
понятное
имя
облегчит
будущую
поддержку
понять
различные
относятся
другу
какое
листинге
показаны
возвращать
экземпляр
добавили
объявленную
полями
назваными
Сигнатура
теперь
указывает
теле
возвращали
срезы
строк
ссылаются
определяем
содержащие
собственные
Переменная
владельцем
позволяют
одалживать
означает
нарушили
правила
заимствования
попытался
взять
управлять
данными
количеством
способов
самый
простой
отчасти
неэффективный
вызвать
метод
сделает
полную
копию
экземпляра
занимает
времени
сохранение
строку
Однако
клонирование
делает
очень
простым
потому
временем
этом
обстоятельстве
отказ
небольшой
получить
простоту
стоит
небольших
компромисса
Компромиссы
использовании
Существует
тенденция
среде
программистов
избегать
понижает
эффективность
Главе
вы
изучите
более
эффективные
методы
подойти
подобной
можно
копировать
несколько
продолжить
работу
сделаете
копии
раз
ваше
строка
запроса
маленькими
работающую
немного
неэффективна
чем
пытаться
заранее
оптимизировать
первом
написании
приобретения
опыта
вам
проще
наиболее
эффективного
решения
вполне
приемлемо
обновили
поэтому
помещает
возвращённый
котором
ранее
использовались
так
использует
поля
чётко
цель
состоит
настроить
программа
работать
знает
найти
именованных
полях
назначению
конструктора
извлекли
отвечающую
синтаксический
поместили
помогло
увидеть
были
отношения
должны
отражены
нашем
коде
названия
целью
возможность
вернуть
именованные
имена
Итак
названную
Выполняя
изменение
сделаем
идиоматичным
создавать
экземпляры
стандартной
библиотеке
такие
вызова
Точно
изменив
название
связанную
будем
уметь
вызывая
Переименование
вызывали
вызывалась
изменили
перенесли
блока
связывает
Попробуйте
скомпилировать
убедиться
Исправление
поработаем
исправлением
Напомним
попытки
доступ
значениям
векторе
приведут
панике
менее
трёх
запустить
каких
выглядеть
сообщением
предназначенной
поможет
нашим
конечным
пользователям
случилось
добавляем
проверку
срез
длинный
попыткой
доступа
индексам
паникует
отображает
улучшенное
Добавление
проверки
похож
написанную
когда
вышло
пределы
допустимых
диапазон
проверяем
длина
остальная
условии
условие
выполнено
меньше
истинным
вызываем
макрос
немедленного
завершения
Имея
лишних
запустим
выглядит
ошибка
вывод
разумное
имеем
постороннюю
информацию
хотим
предоставлять
использованная
техника
использовали
лучшей
подходит
обсуждалось
использовать
другую
технику
которой
узнали
возвращая
успех
Возвращение
которое
содержать
успешном
случае
опишет
изменим
многие
программисты
ожидают
никогда
завершится
неудачей
взаимодействует
сигнал
возникновения
преобразовать
вариант
практичную
окружающего
происходит
вызове
внести
возвращаемое
тело
необходимые
возврата
Заметьте
скомпилируется
обновим
следующем
Наша
экземпляром
успеха
всегда
строковыми
литералами
имеют
внесли
завернули
заставят
своей
новой
сигнатуре
обработать
возвращённое
выйти
чисто
вывести
дружественное
обновить
возвращаемого
показано
возьмём
себя
ответственность
выход
ненулевым
кодом
реализуем
вручную
нулевой
статус
выхода
соглашение
сигнализирует
завершилась
ошибкой
терпит
неудачу
рассматривали
детально
определён
некоторые
пользовательские
значением
поведение
аналогично
внутреннее
обёртки
анонимной
функцией
определённой
передаваемую
рассмотрим
подробно
знать
передаст
статической
строкой
наше
замыкание
указанное
вертикальными
линиями
замыкании
выполнении
подключить
запущен
строчки
печатаем
остановит
вернёт
номер
был
передан
состояния
похоже
обработку
макроса
получаем
дополнительный
Давай
попробуем
Замечательно
намного
дружелюбнее
закончили
обратимся
логике
указали
разделе
проектах
присутствующую
настройкой
обработкой
закончим
краткой
легко
проверяемой
сможем
написать
всей
остальной
демонстрирует
извлечённую
делаем
маленькое
инкрементальное
приближение
извлечению
сосредоточен
содержащей
остальную
оставшуюся
начиная
чтения
принимает
Возврат
Оставшаяся
выделена
улучшить
уже
делали
позволить
программе
паниковать
пойдёт
позволит
далее
консолидировать
удобным
способом
сигнатуру
сделали
три
значительных
возвращала
сохраняли
объект
типаж
вверху
подключили
инструкции
знайте
реализующий
указывать
даёт
случаях
Ключевое
слово
сокращение
динамический
вторых
убрали
пользу
оператора
обсудили
Скорее
вызывать
оператор
текущей
вызывающего
обработал
третьих
успешный
объявлен
обернуть
единичного
поначалу
странным
идиоматический
способ
указать
побочных
эффектов
отобразит
предупреждение
говорит
проигнорировал
произошла
была
компилятор
напоминает
вероятно
хотели
выполнить
некоторый
эту
возвращённых
обрабатывать
используя
методику
аналогичную
той
разницей
вызывается
развернуть
методом
таким
образом
заботимся
обнаружении
развёрнутое
оно
функций
одинаковы
обоих
выходим
библиотечный
крейт
разделим
поместим
меньшее
функциональных
перенесём
относящийся
Соответствующие
Содержимое
сигнатуры
показанные
опустили
тела
краткости
Обратите
внимание
компилироваться
Перемещение
спецификатор
полям
методу
публичный
протестировать
переместили
бинарного
подключения
имени
префикс
подключены
правильно
Уф
много
настроены
будущий
модульным
момента
почти
вся
выполняться
воспользуемся
этой
модульностью
сделав
трудно
старым
новым
напишем
