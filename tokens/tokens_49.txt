Организация
тестов
Язык
программирования
Предисловие
Введение
чего
начать
Установка
Привет
Мир
Программирование
игры
загадки
Общие
концепции
Переменные
изменяемость
Типы
Данных
Функции
Комментарии
Управляющие
конструкции
Понимание
владения
Что
такое
владение
Ссылки
заимствование
Тип
среза
Использование
структур
объединения
связанных
Определение
создание
экземпляров
Пример
программы
использующей
структуры
Синтаксис
метода
Перечисления
сопоставление
образцом
Конструкция
потока
управления
Лаконичный
поток
Управление
растущими
проектами
помощью
пакетов
крейтов
модулей
Пакеты
крейты
областью
действия
конфиденциальностью
Пути
элемент
дереве
путей
область
видимости
ключевого
слова
коллекции
Хранение
списков
значений
векторами
закодированного
текста
строками
ключей
связанными
значениями
Обработка
ошибок
Неустранимые
ошибки
Устранимые
трейты
характеристики
время
жизни
Обобщённые
разделяемого
поведения
Валидация
ссылок
сроков
Написание
автоматических
Как
писать
тесты
выполнением
Проект
вводом
выводом
командной
строки
Получение
аргументов
Чтение
файла
Рефакторинг
обеспечения
модульности
улучшения
обработки
Разработка
функциональности
библиотеки
разработки
тестирование
Работа
переменными
среды
Запись
сообщений
ошибках
вместо
Функциональные
возможности
языка
итераторы
замыкания
анонимные
которые
захватывают
своё
окружение
последовательности
элементов
итераторов
Улучшение
нашего
проекта
Сравнение
производительности
циклы
Подробнее
Настройка
билдов
профилей
выпуска
Публикация
крейта
Рабочие
области
бинарных
файлов
Расширение
возможностей
добавления
пользовательских
команд
Умные
указатели
указания
данные
куче
умными
указателями
обычными
ссылками
трейта
Выполнение
кода
очистке
умный
указатель
подсчётом
внутренняя
Ссылочные
могут
привести
утечке
памяти
Безбоязненный
параллелизм
потоков
параллельного
выполнения
Пересылка
передачи
потоками
общим
состоянием
Расширяемый
трейтов
объектно
ориентированного
ориентированных
языков
трейт
объектов
допускающих
значения
разных
типов
Реализация
шаблона
проектирования
Шаблоны
Все
места
где
использоваться
Опровержимость
может
шаблон
соответствовать
Расширенные
Небезопасный
код
Продвинутые
типажи
Макросы
Финальный
многопоточного
веб
сервера
однопоточного
Превращение
многопоточный
сервер
Мягкое
завершение
работы
очистка
Приложения
А
Ключевые
Операторы
символы
Выводимые
Полезные
инструменты
Редакции
Переводы
книги
создаётся
упоминалось
начале
главы
является
сложной
дисциплиной
разные
люди
используют
разную
терминологию
организацию
Сообщество
думает
тестах
точки
зрения
двух
основных
категорий
модульные
интеграционные
это
небольшие
более
сфокусированные
тестировании
одного
модуля
отдельности
тестироваться
приватные
интерфейсы
являются
полностью
внешними
отношению
вашей
библиотеке
так
любой
другой
внешний
используя
общедоступные
потенциально
выполняя
нескольких
одном
тесте
обоих
видов
важно
того
кусочки
вместе
делали
то
вы
ожидаете
Целью
модульных
каждого
блока
изолированное
остального
функционала
можно
было
быстро
понять
работает
некорректно
ожидается
Мы
разместим
папке
каждый
тестируемый
файл
принято
создавать
тестирующий
модуль
теста
сохранять
файлы
таким
именем
компоненты
предстоит
тестировать
Также
необходимо
добавить
аннотацию
этому
модулю
аннотация
тестами
указывает
компилировать
запускать
когда
выполняется
команда
запускается
экономит
компиляции
хотите
собрать
библиотеку
сэкономить
место
результирующих
скомпилированных
артефактов
потому
будут
включены
увидите
причине
помещаются
каталог
им
нужна
Тем
менее
идут
тех
файлах
основной
будете
использовать
чтобы
указать
они
должны
быть
скомпилированный
результат
Напомним
генерировали
новый
первом
разделе
этой
сгенерировал
нас
ниже
Этот
автоматически
сгенерированным
тестовым
модулем
Атрибут
предназначен
конфигурации
говорит
следующий
должен
включён
учитывая
определённую
опцию
этом
случае
опцией
который
предоставлен
запуска
текущих
компилирует
тестовый
активном
запуске
командой
включает
себя
любые
вспомогательные
модуле
дополнение
функциям
помеченным
приватных
функций
программистов
имеет
однозначного
мнения
поводу
некоторых
языках
весьма
сложно
невозможно
такие
Независимо
какой
технологии
тестирования
придерживаетесь
Рассмотрим
листинг
приватной
функцией
Обратите
внимание
функция
помечена
ещё
один
обсуждали
элементы
дочерних
модулях
своих
родительских
помещаем
родительского
затем
тест
вызывать
считаете
нужно
заставит
вас
сделать
вашу
означает
частью
публичного
Их
проверка
много
частей
работают
правильно
работающих
самостоятельно
возникнуть
проблемы
интеграции
поэтому
тестовое
покрытие
интегрированного
создания
интеграционных
сначала
нужен
создаём
папку
корневой
вашего
рядом
папкой
знает
искать
интеграционными
директории
этого
можем
создать
столько
тестовых
сколько
захотим
скомпилирует
отдельный
крейт
Давайте
создадим
интеграционный
кодом
листинга
всё
файле
создайте
Структура
директорий
должна
выглядеть
Интеграционная
каталоге
представляет
собой
нам
подключить
нашу
тестового
добавляем
верхней
части
делать
комментировать
специальным
образом
обрабатывает
тогда
запускаем
команду
Запустите
сейчас
Выходные
представлены
тремя
разделами
документации
одной
секций
пройдёт
последующие
секции
выполняться
Например
модульный
провалился
будет
выведено
результатов
документационных
эти
том
завершатся
успешно
Первый
раздел
такой
видели
одна
строка
модульного
добавили
листинге
сводная
начинается
Далее
идёт
каждой
тестовой
интеграционном
итоговая
интеграционного
непосредственно
началом
раздела
свой
собственный
добавим
больше
здесь
разделов
запустить
функцию
указав
имя
качестве
аргумента
конкретном
используйте
аргумент
сопровождаемый
команды
Эта
запускает
Подмодули
мере
большего
количества
легче
организовывать
можете
сгруппировать
которую
проверяют
ранее
скомпилирован
полезно
отдельных
областей
точно
имитировать
конечные
пользователи
ваш
Однако
ведут
узнали
Главе
разделить
модули
Различное
поведение
наиболее
заметно
есть
набор
вспомогательных
полезны
Представим
пытаетесь
выполнить
описанные
Разделение
извлечь
общий
создали
поместили
него
содержащую
некоторый
снова
запустим
увидим
результатах
содержит
никаких
вызывали
откуда
Упоминание
появление
сообщения
типа
хотели
выделить
другими
файлами
появлялся
Директория
теперь
выглядит
следующим
используется
раннее
соглашение
именовании
которое
понимает
говорили
Альтернативные
файлам
Именование
рассматривать
перемещаем
удаляем
дополнительный
отображаться
подкаталогах
каталога
компилируются
отдельные
появляются
его
любых
обычный
вызова
объявление
совпадает
объявлением
продемонстрировано
вызвать
наш
бинарным
крейтом
сможем
определённые
инструкции
библиотечные
предоставлять
других
крейтах
бинарные
предназначены
самостоятельного
причин
почему
проекты
генерируют
исполняемые
обычно
имеют
простой
свою
очередь
вызывает
логику
которая
находится
такую
структуру
проверить
библиотечный
оператор
подключения
важного
важный
функционал
небольшое
количество
работать
значит
небольшой
объём
нуждается
проверке
Итоги
Средства
предоставляют
способ
задать
ожидаемое
убедиться
он
соответствует
вашим
ожиданиям
внесения
изменений
различные
детали
реализации
корректно
сообща
открытый
система
правила
помогают
предотвратить
некоторые
виды
прежнему
важны
уменьшения
логических
поведением
объединим
знания
полученные
предыдущей
главах
поработать
проектом
