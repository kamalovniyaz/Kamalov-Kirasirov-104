Работа
умными
указателями
обычными
ссылками
помощью
трейта
Язык
программирования
Предисловие
Введение
чего
начать
Установка
Привет
Мир
Программирование
игры
загадки
Общие
концепции
Переменные
изменяемость
Типы
Данных
Функции
Комментарии
Управляющие
конструкции
Понимание
владения
Что
такое
владение
Ссылки
заимствование
Тип
среза
Использование
структур
объединения
связанных
Определение
создание
экземпляров
Пример
программы
использующей
структуры
Синтаксис
метода
Перечисления
сопоставление
образцом
Конструкция
потока
управления
Лаконичный
поток
Управление
растущими
проектами
пакетов
крейтов
модулей
Пакеты
крейты
областью
действия
конфиденциальностью
Пути
элемент
дереве
путей
область
видимости
ключевого
слова
коллекции
Хранение
списков
значений
векторами
закодированного
текста
строками
ключей
связанными
значениями
Обработка
ошибок
Неустранимые
ошибки
Устранимые
трейты
характеристики
время
жизни
Обобщённые
разделяемого
поведения
Валидация
ссылок
сроков
Написание
автоматических
тестов
Как
писать
тесты
выполнением
Организация
Проект
вводом
выводом
командной
строки
Получение
аргументов
Чтение
файла
Рефакторинг
обеспечения
модульности
улучшения
обработки
Разработка
функциональности
библиотеки
разработки
тестирование
переменными
среды
Запись
сообщений
ошибках
вместо
Функциональные
возможности
языка
итераторы
замыкания
анонимные
которые
захватывают
своё
окружение
последовательности
элементов
итераторов
Улучшение
нашего
проекта
Сравнение
производительности
циклы
Подробнее
Настройка
билдов
профилей
выпуска
Публикация
крейта
Рабочие
области
бинарных
файлов
Расширение
возможностей
добавления
пользовательских
команд
Умные
указатели
указания
данные
куче
Выполнение
кода
очистке
умный
указатель
подсчётом
внутренняя
Ссылочные
могут
привести
утечке
памяти
Безбоязненный
параллелизм
потоков
параллельного
выполнения
Пересылка
передачи
потоками
общим
состоянием
Расширяемый
трейтов
объектно
ориентированного
ориентированных
языков
трейт
объектов
допускающих
значения
разных
типов
Реализация
шаблона
проектирования
Шаблоны
Все
места
где
использоваться
Опровержимость
может
шаблон
соответствовать
Расширенные
Небезопасный
код
Продвинутые
типажи
Макросы
Финальный
многопоточного
веб
сервера
однопоточного
Превращение
многопоточный
сервер
Мягкое
завершение
работы
очистка
Приложения
А
Ключевые
Операторы
символы
Выводимые
Полезные
инструменты
Редакции
Переводы
книги
создаётся
Обращение
типажа
Используя
вы
можете
изменить
поведение
оператора
разыменования
путать
операторами
умножения
глобального
подключения
Реализовав
таким
образом
рассматриваться
обычная
ссылка
оперирующий
также
использовать
этот
Давайте
сначала
посмотрим
работает
оператор
Затем
мы
попытаемся
определить
пользовательский
который
ведёт
себя
почему
нового
объявленного
типа
рассмотрим
делает
возможным
работу
умных
указателей
аналогично
ссылкам
разыменованное
приведение
оно
позволяет
работать
любыми
Примечание
есть
одна
большая
разница
типом
собираемся
создать
реальным
наша
версия
будет
хранить
свои
примере
сосредоточимся
типаже
поэтому
менее
важно
то
хранятся
подобное
указателю
Следуя
указателем
значение
разновидность
указателя
можно
рассматривать
своеобразную
стрелочку
направляющую
значению
хранящемуся
другом
месте
листинге
создаём
ссылку
используем
перехода
Файл
Листинг
следования
ссылке
Переменной
присвоено
установили
качестве
можем
утверждать
равно
Однако
хотим
сделать
утверждение
значении
должны
перейти
которое
она
указывает
происходит
разыменование
того
компилятор
сравнении
мог
фактическое
разыменуем
получим
доступ
целочисленному
будем
сравнивать
Если
бы
попытались
написать
получили
ошибку
компиляции
числа
число
допускается
потому
они
различных
переписать
используемый
так
Основное
различие
листингом
заключается
том
здесь
устанавливаем
экземпляр
указывающий
скопированное
указывающую
последнем
утверждении
проследовать
это
делали
когда
был
ссылкой
Далее
особенного
нам
определяя
наш
собственный
собственного
умного
создадим
похожий
предоставляемый
стандартной
библиотекой
понять
отличается
обычной
вопрос
добавить
возможность
конечном
итоге
определяется
структура
кортежа
одним
элементом
аналогичным
определим
функцию
соответствовала
определённой
определяем
структуру
именем
объявляем
обобщённый
параметр
хранил
любого
является
структурой
Функция
принимает
один
возвращает
содержит
переданное
попробуем
листинга
изменим
её
определили
компилироваться
знает
разыменовывать
Попытка
использовали
результат
быть
разыменован
реализовали
эту
включить
реализуем
типаж
Трактование
реализуя
обсуждалось
разделе
Главы
реализации
нужно
предоставить
требуемых
методов
требует
нас
одного
заимствует
внутренние
реализацию
добавленную
определению
определяет
связанный
использования
Связанные
немного
другой
способ
объявления
обобщённого
параметра
пока
вам
них
беспокоиться
их
более
подробно
главе
заполним
тело
оператором
вернул
которому
получить
вспомним
раздела
получает
первому
кортежной
структуре
которая
вызывает
теперь
компилируется
проверки
проходят
Метод
даёт
компилятору
принимать
реализующего
вызывать
которую
он
ввели
фактически
выполнил
кулисами
такой
заменяет
вызовом
простое
думать
Эта
функционирует
одинаково
независимо
реализующий
Причина
которой
круглых
скобок
ещё
необходимо
связана
системой
возвращал
напрямую
него
переместилось
передавать
внутренним
значением
внутри
этом
случае
большинстве
случаев
Обратите
внимание
заменён
раз
каждый
коде
Поскольку
замена
повторяется
бесконечно
получаем
соответствуют
Неявные
разыменованные
приведения
функциями
методами
преобразует
реализует
признак
Например
преобразовать
удобный
механизм
использует
функций
реализующих
автоматически
передаём
аргумента
определённого
соответствует
типу
определении
результате
серии
вызовов
передали
преобразуется
необходимый
было
добавлено
программистам
пишущим
вызовы
добавлять
множество
явных
разыменований
Функциональность
разыменованного
больше
увидеть
действии
воспользуемся
определённым
показывает
срез
имеющая
вызвать
срезом
вызов
показано
вызываем
аргументом
вызывая
Стандартная
библиотека
предоставляет
описано
документации
снова
превратить
реализовал
были
вызова
пришлось
разыменовывает
принимают
строковый
равный
всей
строке
сигнатуре
сложнее
читать
понимать
всеми
этими
символами
обрабатывать
эти
преобразования
определён
задействованных
проанализирует
столько
сколько
соответствующую
Количество
вставить
имеет
накладных
расходов
взаимодействует
изменяемостью
Подобно
тому
используете
переопределения
неизменяемых
изменяемых
выполняет
находит
типажей
трёх
случаях
верно
Первые
два
случая
идентичны
друг
другу
исключением
второй
первом
говорится
вас
некоторого
сможете
прозрачно
втором
Третий
случай
хитрее
приводит
изменяемую
неизменяемой
обратное
представляется
неизменяемые
никогда
приводятся
изменяемым
правил
заимствования
изменяемая
должна
единственной
противном
программа
Преобразование
одной
изменяемой
неизменяемую
нарушит
правила
потребует
наличия
гарантируют
этого
Следовательно
предположение
возможно
