Лаконичный
поток
управления
Язык
программирования
Предисловие
Введение
чего
начать
Установка
Привет
Мир
Программирование
игры
загадки
Общие
концепции
Переменные
изменяемость
Типы
Данных
Функции
Комментарии
Управляющие
конструкции
Понимание
владения
Что
такое
владение
Ссылки
заимствование
Тип
среза
Использование
структур
объединения
связанных
Определение
создание
экземпляров
Пример
программы
использующей
структуры
Синтаксис
метода
Перечисления
сопоставление
образцом
Конструкция
потока
Управление
растущими
проектами
помощью
пакетов
крейтов
модулей
Пакеты
крейты
областью
действия
конфиденциальностью
Пути
элемент
дереве
путей
область
видимости
ключевого
слова
коллекции
Хранение
списков
значений
векторами
закодированного
текста
строками
ключей
связанными
значениями
Обработка
ошибок
Неустранимые
ошибки
Устранимые
трейты
характеристики
время
жизни
Обобщённые
разделяемого
поведения
Валидация
ссылок
сроков
Написание
автоматических
тестов
Как
писать
тесты
выполнением
Организация
Проект
вводом
выводом
командной
строки
Получение
аргументов
Чтение
файла
Рефакторинг
обеспечения
модульности
улучшения
обработки
Разработка
функциональности
библиотеки
разработки
тестирование
Работа
переменными
среды
Запись
сообщений
ошибках
вместо
Функциональные
возможности
языка
итераторы
замыкания
анонимные
которые
захватывают
своё
окружение
последовательности
элементов
итераторов
Улучшение
нашего
проекта
Сравнение
производительности
циклы
Подробнее
Настройка
билдов
профилей
выпуска
Публикация
крейта
Рабочие
области
бинарных
файлов
Расширение
возможностей
добавления
пользовательских
команд
Умные
указатели
указания
данные
куче
умными
указателями
обычными
ссылками
трейта
Выполнение
кода
очистке
умный
указатель
подсчётом
внутренняя
Ссылочные
могут
привести
утечке
памяти
Безбоязненный
параллелизм
потоков
параллельного
выполнения
Пересылка
передачи
потоками
общим
состоянием
Расширяемый
трейтов
объектно
ориентированного
ориентированных
языков
трейт
объектов
допускающих
значения
разных
типов
Реализация
шаблона
проектирования
Шаблоны
Все
места
где
использоваться
Опровержимость
может
шаблон
соответствовать
Расширенные
Небезопасный
код
Продвинутые
типажи
Макросы
Финальный
многопоточного
веб
сервера
однопоточного
Превращение
многопоточный
сервер
Мягкое
завершение
работы
очистка
Приложения
А
Ключевые
Операторы
символы
Выводимые
Полезные
инструменты
Редакции
Переводы
книги
создаётся
Компактное
потоком
позволяет
скомбинировать
менее
многословную
конструкцию
затем
обработать
соответствующе
одному
шаблону
одновременно
игнорируя
остальные
Рассмотрим
программу
листинге
которая
обрабатывает
переменной
хочет
выполнить
том
случае
значение
является
вариантом
Листинг
Выражение
которое
выполнит
значении
равном
равно
мы
распечатываем
варианте
привязывая
шаблоне
хотим
ничего
делать
значением
удовлетворить
должны
добавить
первой
единственной
ветки
добавление
шаблонного
раздражает
этого
могли
бы
написать
это
более
коротким
способом
используя
Следующий
ведёт
себя
так
принимает
разделённые
знаком
равенства
Он
работает
когда
него
вход
передадут
подходящим
шаблоном
выражения
окажется
первая
ветка
данном
привязывается
значению
можем
использовать
теле
блока
использовали
соответствующей
ветке
блоке
запускается
соответствует
меньше
печатаем
делаем
отступов
получаем
Тем
теряем
полную
проверку
всех
вариантов
предоставляемую
выражением
Выбор
зависит
того
вы
делаете
вашем
конкретном
краткости
потере
полноты
проверки
компромиссом
Другими
словами
можете
думать
синтаксическом
сахаре
который
входное
будет
единственному
проигнорирует
Можно
добавлять
Блок
находится
внутри
аналогичен
смыслу
блоку
связанной
эквивалентно
сборной
Вспомним
объявление
вариант
также
содержит
штата
типа
хотели
посчитать
монеты
являющиеся
четвертями
четвертей
печатать
название
сделать
таким
образом
вас
есть
ситуация
которой
ваша
программа
имеет
логику
слишком
многословна
её
выражать
наборе
инструментов
Итоги
рассмотрели
создания
быть
одним
наборов
перечисляемых
показали
стандартной
помогает
систему
предотвращения
имеют
них
извлечь
пользоваться
зависимости
сколько
случаев
нужно
Теперь
ваши
вашей
предметной
обеспечивает
типобезопасность
компилятор
позаботится
получали
они
ожидают
предоставить
вашим
пользователям
хорошо
организованный
прост
использовании
предоставляет
то
надо
поговорить
модулях
